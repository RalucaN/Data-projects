<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0326.1623                               -->
<workbook original-version='18.1' source-build='2020.1.2 (20201.20.0326.1623)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='covid_data' inline='true' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_data' name='textscan.0qfu0uu1ntecl7176u3jy01mwrbh'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/Raluca/PycharmProjects/Data-projects/COVID-19/covid_data.csv' dataRefreshTime='' directory='C:/Users/Raluca/PycharmProjects/Data-projects/COVID-19' filename='C:/Users/Raluca/AppData/Local/Temp/TableauTemp/1wiypir1cl4o1k1f2wvsd1brro0e/covid_data.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Smoking of tobacco products by sex, age and degree of urbanisation' name='excel-direct.02fv9rv0nw4s021ds8ema0npteu5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Raluca/PycharmProjects/Data-projects/COVID-19/Smoking of tobacco products by sex, age and degree of urbanisation.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Daily exposure to tobacco smoke indoors by sex, age and degree of urbanisation' name='excel-direct.13x4x6t0ndpui716uplse0a357q2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Raluca/PycharmProjects/Data-projects/COVID-19/Daily exposure to tobacco smoke indoors by sex, age and degree of urbanisation.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Health Care Expenditure' name='excel-direct.0lebsd71tw0p2k1h5nbva1ismg8b'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Raluca/PycharmProjects/Data-projects/COVID-19/Health Care Expenditure.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='population data' name='textscan.060dyqh11ugg18132l08v0pul5e7'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/Raluca/PycharmProjects/Data-projects/COVID-19/population data.csv' dataRefreshTime='' directory='C:/Users/Raluca/PycharmProjects/Data-projects/COVID-19' filename='C:/Users/Raluca/AppData/Local/Temp/TableauTemp/0yslytc1eg34550zz4sfo1trpn5s/population data.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Share of people with good or very good perceived health by sex' name='excel-direct.0q2mmdw0nweoee114ch5w1jy7b8l'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Raluca/PycharmProjects/Data-projects/COVID-19/Share of people with good or very good perceived health by sex.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[covid_data.csv].[Country_Region]' />
              <expression op='[health care expediture].[GEO (Labels)]' />
            </expression>
          </clause>
          <relation join='full' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[covid_data.csv].[Country_Region]' />
                <expression op='[smoking].[GEO]' />
              </expression>
            </clause>
            <relation join='full' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[covid_data.csv].[Country_Region]' />
                  <expression op='[perceived health].[GEO (Labels)]' />
                </expression>
              </clause>
              <relation join='full' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[covid_data.csv].[Country_Region]' />
                    <expression op='[population data.csv].[GEO]' />
                  </expression>
                </clause>
                <relation connection='textscan.0qfu0uu1ntecl7176u3jy01mwrbh' name='covid_data.csv' table='[C:\Users\Raluca\PycharmProjects\Data-projects\COVID-19\covid_data#csv]' type='table'>
                  <columns character-set='UTF-8' gridOrigin='A1:M10001:no:A1:M10001:2' header='yes' locale='en_IE' separator=','>
                    <column datatype='string' name='Case_Type' ordinal='0' />
                    <column datatype='integer' name='Cases' ordinal='1' />
                    <column datatype='integer' name='Difference' ordinal='2' />
                    <column datatype='date' name='Date' ordinal='3' />
                    <column datatype='string' name='Country_Region' ordinal='4' />
                    <column datatype='string' name='Province_State' ordinal='5' />
                    <column datatype='string' name='Admin2' ordinal='6' />
                    <column datatype='string' name='Combined_Key' ordinal='7' />
                    <column datatype='string' name='FIPS' ordinal='8' />
                    <column datatype='real' name='Lat' ordinal='9' />
                    <column datatype='real' name='Long' ordinal='10' />
                    <column datatype='string' name='Table_Names' ordinal='11' />
                    <column datatype='datetime' name='Prep_Flow_Runtime' ordinal='12' />
                  </columns>
                </relation>
                <relation connection='textscan.060dyqh11ugg18132l08v0pul5e7' name='population data.csv' table='[C:\Users\Raluca\PycharmProjects\Data-projects\COVID-19\population data#csv]' type='table'>
                  <columns character-set='UTF-8' gridOrigin='A1:E35:no:A1:E35:1' header='yes' locale='en_IE' separator=','>
                    <column datatype='integer' name='TIME' ordinal='0' />
                    <column datatype='string' name='GEO' ordinal='1' />
                    <column datatype='string' name='INDIC_DE' ordinal='2' />
                    <column datatype='integer' name='Population_Jan2019' ordinal='3' />
                    <column datatype='string' name='Flag and Footnotes' ordinal='4' />
                  </columns>
                </relation>
              </relation>
              <relation connection='excel-direct.0q2mmdw0nweoee114ch5w1jy7b8l' name='perceived health' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E42:no:A1:E42:0' header='yes' outcome='2'>
                  <column datatype='string' name='GEO (Labels)' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Share of people with good or very good perceived health by all' ordinal='2' />
                  <column datatype='real' name='Share of people with good or very good perceived health by males' ordinal='3' />
                  <column datatype='real' name='Share of people with good or very good perceived health by females' ordinal='4' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.02fv9rv0nw4s021ds8ema0npteu5' name='smoking' table='[Sheet1$]' type='table'>
              <columns gridOrigin='A1:H100:no:A1:H100:0' header='yes' outcome='6'>
                <column datatype='string' name='GEO' ordinal='0' />
                <column datatype='integer' name='TIME' ordinal='1' />
                <column datatype='string' name='DEG_URB' ordinal='2' />
                <column datatype='string' name='SEX' ordinal='3' />
                <column datatype='string' name='AGE' ordinal='4' />
                <column datatype='string' name='UNIT' ordinal='5' />
                <column datatype='real' name='Value' ordinal='6' />
                <column datatype='string' name='SMOKING' ordinal='7' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0lebsd71tw0p2k1h5nbva1ismg8b' name='health care expediture' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:D44:no:A1:D44:0' header='yes' outcome='2'>
              <column datatype='string' name='GEO (Labels)' ordinal='0' />
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
              <column datatype='real' name='Total Health Care Expenditure as Percentage of gross domestic product (GDP)' ordinal='2' />
              <column datatype='real' name='Total Health Care Expenditure as Purchasing power standard (PPS) per inhabitant' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AGE]' value='[smoking].[AGE]' />
          <map key='[Admin2]' value='[covid_data.csv].[Admin2]' />
          <map key='[Case_Type]' value='[covid_data.csv].[Case_Type]' />
          <map key='[Cases]' value='[covid_data.csv].[Cases]' />
          <map key='[Combined_Key]' value='[covid_data.csv].[Combined_Key]' />
          <map key='[Country_Region]' value='[covid_data.csv].[Country_Region]' />
          <map key='[DEG_URB]' value='[smoking].[DEG_URB]' />
          <map key='[Date]' value='[covid_data.csv].[Date]' />
          <map key='[Difference]' value='[covid_data.csv].[Difference]' />
          <map key='[FIPS]' value='[covid_data.csv].[FIPS]' />
          <map key='[Flag and Footnotes]' value='[population data.csv].[Flag and Footnotes]' />
          <map key='[GEO (Labels) (health care expediture)]' value='[health care expediture].[GEO (Labels)]' />
          <map key='[GEO (Labels)]' value='[perceived health].[GEO (Labels)]' />
          <map key='[GEO (smoking)]' value='[smoking].[GEO]' />
          <map key='[GEO]' value='[population data.csv].[GEO]' />
          <map key='[INDIC_DE]' value='[population data.csv].[INDIC_DE]' />
          <map key='[Lat]' value='[covid_data.csv].[Lat]' />
          <map key='[Long]' value='[covid_data.csv].[Long]' />
          <map key='[Population_Jan2019]' value='[population data.csv].[Population_Jan2019]' />
          <map key='[Prep_Flow_Runtime]' value='[covid_data.csv].[Prep_Flow_Runtime]' />
          <map key='[Province_State]' value='[covid_data.csv].[Province_State]' />
          <map key='[SEX]' value='[smoking].[SEX]' />
          <map key='[SMOKING]' value='[smoking].[SMOKING]' />
          <map key='[Share of people with good or very good perceived health by all]' value='[perceived health].[Share of people with good or very good perceived health by all]' />
          <map key='[Share of people with good or very good perceived health by females]' value='[perceived health].[Share of people with good or very good perceived health by females]' />
          <map key='[Share of people with good or very good perceived health by males]' value='[perceived health].[Share of people with good or very good perceived health by males]' />
          <map key='[TIME (smoking)]' value='[smoking].[TIME]' />
          <map key='[TIME]' value='[population data.csv].[TIME]' />
          <map key='[Table_Names]' value='[covid_data.csv].[Table_Names]' />
          <map key='[Total Health Care Expenditure as Percentage of gross domestic product (GDP)]' value='[health care expediture].[Total Health Care Expenditure as Percentage of gross domestic product (GDP)]' />
          <map key='[Total Health Care Expenditure as Purchasing power standard (PPS) per inhabitant]' value='[health care expediture].[Total Health Care Expenditure as Purchasing power standard (PPS) per inhabitant]' />
          <map key='[UNIT]' value='[smoking].[UNIT]' />
          <map key='[Value]' value='[smoking].[Value]' />
          <map key='[Year (health care expediture)]' value='[health care expediture].[Year]' />
          <map key='[Year]' value='[perceived health].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M10001:no:A1:M10001:2&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Case_Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Case_Type]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Case_Type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cases]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Difference</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Difference]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Difference</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Region]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Country_Region</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province_State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province_State]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Province_State</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Admin2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Admin2]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Admin2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Combined_Key</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Combined_Key]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Combined_Key</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table_Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table_Names]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Table_Names</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prep_Flow_Runtime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Prep_Flow_Runtime]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Prep_Flow_Runtime</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E35:no:A1:E35:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TIME]</local-name>
            <parent-name>[population data.csv]</parent-name>
            <remote-alias>TIME</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEO</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GEO]</local-name>
            <parent-name>[population data.csv]</parent-name>
            <remote-alias>GEO</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDIC_DE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDIC_DE]</local-name>
            <parent-name>[population data.csv]</parent-name>
            <remote-alias>INDIC_DE</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_Jan2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population_Jan2019]</local-name>
            <parent-name>[population data.csv]</parent-name>
            <remote-alias>Population_Jan2019</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flag and Footnotes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Flag and Footnotes]</local-name>
            <parent-name>[population data.csv]</parent-name>
            <remote-alias>Flag and Footnotes</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEO (Labels)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[GEO (Labels)]</local-name>
            <parent-name>[perceived health]</parent-name>
            <remote-alias>GEO (Labels)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[perceived health]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Share of people with good or very good perceived health by all</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Share of people with good or very good perceived health by all]</local-name>
            <parent-name>[perceived health]</parent-name>
            <remote-alias>Share of people with good or very good perceived health by all</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Share of people with good or very good perceived health by males</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Share of people with good or very good perceived health by males]</local-name>
            <parent-name>[perceived health]</parent-name>
            <remote-alias>Share of people with good or very good perceived health by males</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Share of people with good or very good perceived health by females</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Share of people with good or very good perceived health by females]</local-name>
            <parent-name>[perceived health]</parent-name>
            <remote-alias>Share of people with good or very good perceived health by females</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[perceived health]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E42:no:A1:E42:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEO</remote-name>
            <remote-type>130</remote-type>
            <local-name>[GEO (smoking)]</local-name>
            <parent-name>[smoking]</parent-name>
            <remote-alias>GEO</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TIME (smoking)]</local-name>
            <parent-name>[smoking]</parent-name>
            <remote-alias>TIME</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEG_URB</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DEG_URB]</local-name>
            <parent-name>[smoking]</parent-name>
            <remote-alias>DEG_URB</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SEX</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SEX]</local-name>
            <parent-name>[smoking]</parent-name>
            <remote-alias>SEX</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AGE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AGE]</local-name>
            <parent-name>[smoking]</parent-name>
            <remote-alias>AGE</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[UNIT]</local-name>
            <parent-name>[smoking]</parent-name>
            <remote-alias>UNIT</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[smoking]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SMOKING</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SMOKING]</local-name>
            <parent-name>[smoking]</parent-name>
            <remote-alias>SMOKING</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[smoking]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H100:no:A1:H100:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[health care expediture]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D44:no:A1:D44:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEO (Labels)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[GEO (Labels) (health care expediture)]</local-name>
            <parent-name>[health care expediture]</parent-name>
            <remote-alias>GEO (Labels)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year (health care expediture)]</local-name>
            <parent-name>[health care expediture]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>32</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Health Care Expenditure as Percentage of gross domestic product (GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Health Care Expenditure as Percentage of gross domestic product (GDP)]</local-name>
            <parent-name>[health care expediture]</parent-name>
            <remote-alias>Total Health Care Expenditure as Percentage of gross domestic product (GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Health Care Expenditure as Purchasing power standard (PPS) per inhabitant</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Health Care Expenditure as Purchasing power standard (PPS) per inhabitant]</local-name>
            <parent-name>[health care expediture]</parent-name>
            <remote-alias>Total Health Care Expenditure as Purchasing power standard (PPS) per inhabitant</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='FirstCase' datatype='date' name='[Calculation_943785634363527171]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Country_Region]:MIN(IF{FIXED [Country_Region],[Date], [Case_Type]:SUM([Cases])}&gt;=1 THEN [Date] END)}' />
      </column>
      <column caption='NumberDays' datatype='integer' name='[Calculation_943785634366201862]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Calculation_943785634363527171],[Date])' />
      </column>
      <column datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Country_Region]' derivation='Attribute' name='[attr:Country_Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_943785634366201862]' derivation='None' name='[none:Calculation_943785634366201862:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Country_Region,NumberDays)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country_Region:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_943785634366201862:qk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country_Region, Province_State'>
          <field>[Country_Region]</field>
          <field>[Province_State]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.321429' measure-ordering='alphabetic' measure-percentage='0.678571' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country_Region:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Romania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[tdy:Date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>#2020-01-30 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-02-19 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-03-10 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-03-30 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-01-22 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-02-11 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-03-02 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-03-22 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-04-11 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-01-26 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-02-15 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-03-06 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-03-26 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-04-15 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-02-03 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-02-23 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-03-14 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-04-03 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-01-31 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-02-20 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-03-11 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-03-31 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-01-27 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-02-16 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-03-07 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-03-27 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-02-09 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-02-29 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-03-20 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-04-09 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-01-23 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-02-12 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-03-03 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-03-23 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-04-12 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-02-07 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-02-27 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-03-18 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-04-07 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-01-28 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-02-17 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-03-08 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-03-28 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-02-04 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-02-24 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-03-15 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-04-04 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-02-05 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-02-25 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-03-16 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-04-05 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-02-08 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-02-28 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-03-19 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-04-08 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-02-10 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-03-01 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-03-21 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-04-10 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-02-01 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-02-21 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-03-12 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-04-01 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-01-29 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-02-18 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-03-09 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-03-29 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-01-24 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-02-13 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-03-04 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-03-24 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-04-13 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-02-06 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-02-26 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-03-17 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-04-06 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-02-02 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-02-22 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-03-13 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-04-02 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-01-25 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-02-14 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-03-05 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-03-25 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-04-14 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[dy:Date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>8</bucket>
            </map>
            <map to='#499894'>
              <bucket>28</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>20</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>24</bucket>
            </map>
            <map to='#79706e'>
              <bucket>12</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>9</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>29</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>25</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>18</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>16</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>6</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>26</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13</bucket>
            </map>
            <map to='#d37295'>
              <bucket>14</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>17</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10</bucket>
            </map>
            <map to='#e15759'>
              <bucket>30</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>7</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>27</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>22</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>31</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>23</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Country_Region:nk]' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cruise Ships&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cruise Ship&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country_Region:nk]' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cruise Ships&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cruise Ship&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Romania versus Ireland</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' />
          </datasources>
          <datasource-dependencies datasource='Parameters' />
          <datasource-dependencies datasource='federated.012wlj9017zhmc1fmjwkp0koh0sj'>
            <column caption='CEILING([Cases])' datatype='integer' name='[Calculation_261771760406581250]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='CEILING([Cases])' />
            </column>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_261771760406581250]' derivation='Sum' forecast-column-base='[sum:Calculation_261771760406581250:qk]' forecast-column-type='forecast-prediction-interval-lower' name='[fPIL:sum:Calculation_261771760406581250:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_261771760406581250]' derivation='Sum' forecast-column-base='[sum:Calculation_261771760406581250:qk]' forecast-column-type='forecast-prediction-interval-upper' name='[fPIU:sum:Calculation_261771760406581250:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_261771760406581250]' derivation='Sum' forecast-column-base='[sum:Calculation_261771760406581250:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Calculation_261771760406581250:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cases]' derivation='Sum' forecast-column-base='[sum:Cases:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_261771760406581250]' derivation='Sum' name='[sum:Calculation_261771760406581250:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[mn:Date:ok]'>
            <groupfilter function='member' level='[mn:Date:ok]' member='3' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Confirmed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country_Region:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country_Region:nk]' member='&quot;Romania&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[mn:Date:ok]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:sum:Calculation_261771760406581250:qk]' scope='rows' value='Confirmed COVID-19 cases' />
            <format attr='tick-color' field='[Parameters].[Parameter 1]' value='#4e79a7' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[dy:Date:ok]' value='idd' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[qr:Date:ok]' value='false' />
            <format attr='display' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[yr:Date:ok]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_7' value='#00000000' />
            <format attr='line-visibility' id='annotation_7' value='on' />
            <format attr='line-pattern-only' id='annotation_7' value='dashed' />
            <format attr='stroke-color' id='annotation_7' value='#555555' />
            <format attr='fill-color' id='annotation_8' value='#00000000' />
            <format attr='stroke-color' id='annotation_8' value='#555555' />
            <format attr='fill-color' id='annotation_11' value='#00000000' />
            <format attr='stroke-color' id='annotation_11' value='#555555' />
            <format attr='fill-color' id='annotation_13' value='#00000000' />
            <format attr='stroke-color' id='annotation_13' value='#555555' />
            <format attr='body-type' id='annotation_13' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:sum:Calculation_261771760406581250:qk]</rows>
        <cols>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]</cols>
        <annotations>
          <annotation class='point' id='7' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>Æ </run>
              <run bold='true' fontalignment='0'>&lt;[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]&gt;, Romania declares state emergency as the no of infections reaches </run>
              <run fontalignment='0' fontcolor='#787878'>Æ </run>
              <run bold='true' fontalignment='0'>&lt;[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:sum:Cases:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-03-16 04:44:32.307#'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='161.59076923076913'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:sum:Cases:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-5' y='-520' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='0' text-width='296'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontcolor='#000000'>&lt;[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]&gt;</run>
              <run fontalignment='0' fontcolor='#000000'>, Romania declares </run>
              <run bold='true' fontalignment='0' fontcolor='#000000'>state of emergency</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0' fontcolor='#000000'>Cases: 158 (Ro) versus 169 (IE)</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-03-16 01:54:13.846#'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='141.52307692307676'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:sum:Calculation_261771760406581250:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-111' y='-306' />
          </annotation>
          <annotation class='point' id='11' mark-position='1' pullback='0' text-width='260'>
            <formatted-text>
              <run fontalignment='0' underline='true'>Forecast for &lt;[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]&gt;</run>
              <run fontalignment='0'>&#10;Romania</run>
              <run bold='true' fontalignment='0'> versus </run>
              <run fontalignment='0'>Ireland&#10;</run>
              <run bold='true' fontalignment='0'>           871                2230</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:sum:Calculation_261771760406581250:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</field>
                      <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]</field>
                      <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fPIL:sum:Calculation_261771760406581250:qk]</field>
                      <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fPIU:sum:Calculation_261771760406581250:qk]</field>
                      <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:sum:Calculation_261771760406581250:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Romania&quot;</value>
                    <value>#2020-03-31 00:00:00#</value>
                    <value>579</value>
                    <value>982</value>
                    <value>780</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-468' />
          </annotation>
          <annotation class='point' id='13' mark-position='1' pullback='0' text-width='304'>
            <formatted-text>
              <run bold='true' fontalignment='0'>3 days later,</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'>Ireland +265 (increase of 47%)</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'>Romania + 17 </run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-03-19 00:31:09.230#'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='281.69253294289888'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:sum:Calculation_261771760406581250:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='1' y='-408' />
          </annotation>
        </annotations>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='0' model-type='auto-season' range-periods='Week-Trunc' range-size='2' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{19CA9060-E254-41F5-A3A9-A1C7FF891614}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' />
          </datasources>
          <datasource-dependencies datasource='federated.012wlj9017zhmc1fmjwkp0koh0sj'>
            <column caption='CEILING([Difference])' datatype='integer' name='[Calculation_297237613194371072]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='CEILING([Difference])' />
            </column>
            <column caption='FirstCase' datatype='date' name='[Calculation_943785634363527171]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Country_Region]:MIN(IF{FIXED [Country_Region],[Date], [Case_Type]:SUM([Cases])}&gt;=1 THEN [Date] END)}' />
            </column>
            <column caption='NumberDays' datatype='integer' name='[Calculation_943785634366201862]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Calculation_943785634363527171],[Date])' />
            </column>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Difference]' role='measure' type='quantitative' />
            <column datatype='string' name='[SMOKING]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_297237613194371072]' derivation='Avg' name='[avg:Calculation_297237613194371072:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_943785634366201862]' derivation='None' name='[none:Calculation_943785634366201862:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[SMOKING]' derivation='None' name='[none:SMOKING:nk]' pivot='key' type='nominal' />
            <column-instance column='[Difference]' derivation='Sum' name='[sum:Difference:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[Exclusions (Country_Region,NumberDays)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Country_Region:nk]' />
                <groupfilter function='level-members' level='[none:Calculation_943785634366201862:qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_943785634366201862:qk]' member='41' />
                  <groupfilter function='member' level='[none:Country_Region:nk]' member='&quot;Italy&quot;' />
                </groupfilter>
                <order>
                  <hierarchy name='[none:Country_Region:nk]' />
                  <hierarchy name='[none:Calculation_943785634366201862:qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634366201862:qk]' included-values='in-range'>
            <min>0</min>
            <max>65</max>
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Confirmed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country_Region:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country_Region:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country_Region:nk]' member='&quot;Romania&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]'>
            <groupfilter function='member' level='[none:SMOKING:nk]' member='&quot;Daily smoker&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634366201862:qk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[Exclusions (Country_Region,NumberDays)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[avg:Calculation_297237613194371072:qk]' scope='rows' value='Number of new cases daily' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[avg:Calculation_297237613194371072:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634366201862:qk]' scope='cols' value='Number of Days since first COVID-19 case' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='background-color' id='refline0' value='#ffffff46' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline0' value='#e6e6e6' />
            <format attr='stroke-color' id='refline0' value='#666666' />
            <format attr='line-pattern-only' id='refline0' value='solid' />
            <format attr='stroke-size' id='refline0' value='0' />
            <format attr='line-visibility' id='refline0' value='off' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='line-visibility' id='annotation_3' value='on' />
            <format attr='line-pattern-only' id='annotation_3' value='dotted' />
            <format attr='stroke-color' id='annotation_3' value='#000000' />
            <format attr='fill-color' id='annotation_3' value='#00000000' />
            <format attr='line-visibility' id='annotation_4' value='on' />
            <format attr='line-pattern-only' id='annotation_4' value='dotted' />
            <format attr='stroke-color' id='annotation_4' value='#000000' />
            <format attr='fill-color' id='annotation_4' value='#00000000' />
            <format attr='border-color' id='annotation_4' value='#666666' />
            <format attr='border-style' id='annotation_4' value='solid' />
            <format attr='border-color' id='annotation_3' value='#555555' />
            <format attr='border-style' id='annotation_3' value='solid' />
            <format attr='line-visibility' id='annotation_5' value='on' />
            <format attr='line-pattern-only' id='annotation_5' value='dotted' />
            <format attr='stroke-color' id='annotation_5' value='#000000' />
            <format attr='border-color' id='annotation_5' value='#d4d4d4' />
            <format attr='border-style' id='annotation_5' value='solid' />
            <format attr='fill-color' id='annotation_5' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]' />
            </encodings>
            <reference-line axis-column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634366201862:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' paired-id='refline2' scope='per-table' symmetric='false' tooltip-type='none' value='37' value-column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634366201862:qk]' z-order='2' />
            <reference-line axis-column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634366201862:qk]' enable-instant-analytics='true' formula='max' id='refline1' label-type='automatic' paired-id='refline0' scope='per-table' symmetric='false' tooltip='' tooltip-type='custom' value-column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634366201862:qk]' z-order='1' />
            <reference-line axis-column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634366201862:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label-type='automatic' paired-id='refline0' scope='per-table' symmetric='false' tooltip-type='none' value='57' value-column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634366201862:qk]' z-order='3' />
          </pane>
        </panes>
        <rows>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[avg:Calculation_297237613194371072:qk]</rows>
        <cols>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634366201862:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontcolor='#000000'>Romania</run>
              <run fontalignment='0' fontcolor='#000000'> in 6th of April</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run fontalignment='0' fontcolor='#000000'>Æ </run>
              <run bold='true' fontalignment='0' fontcolor='#000000'>&lt;[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634366201862:qk]&gt; days since the first COVID-19 case</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='39.926406926406933'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634366201862:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='183.92086330935297'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[sum:Difference:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-4' y='-406' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='0' text-width='209'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontcolor='#000000'>Romania -</run>
              <run fontalignment='0' fontcolor='#000000'> 6th of April</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0' fontcolor='#000000'>40th day</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='40.052813852813856'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634366201862:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='199.6972543352606'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[avg:Calculation_297237613194371072:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-154' y='-548' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='0' text-width='199'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontcolor='#000000'>Ireland</run>
              <run fontalignment='0' fontcolor='#000000'> in 6th of April</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0' fontcolor='#000000'>37th day</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='37.082251082251084'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634366201862:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='368.08309248554872'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[avg:Calculation_297237613194371072:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-254' y='-375' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='123'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontcolor='#000000'>Italy</run>
              <run fontalignment='0' fontcolor='#000000'>&apos;s peak </run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0' fontcolor='#000000'>50th</run>
              <run fontalignment='0' fontcolor='#000000'> day</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='49.912554112554112'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634366201862:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='6552.435693641617'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[avg:Calculation_297237613194371072:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-82' y='-175' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{A6BEA07E-5316-4F4C-9996-77BB5B1E4262}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.012wlj9017zhmc1fmjwkp0koh0sj'>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[GEO]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population_Jan2019]' role='measure' type='quantitative' />
            <column-instance column='[Population_Jan2019]' derivation='Attribute' name='[attr:Population_Jan2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[GEO]' derivation='None' name='[none:GEO:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Confirmed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-28#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GEO:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' />
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;European Union - 28 countries (2013-2020)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GEO:nk]' />
              <groupfilter function='member' level='[none:GEO:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[sum:Cases:qk]</rows>
        <cols>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Population_Jan2019:qk]</cols>
      </table>
      <simple-id uuid='{4AE7DA43-A4E8-483F-9AB4-F4858EAEE766}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.012wlj9017zhmc1fmjwkp0koh0sj'>
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-27#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[Longitude (generated)]' field-type='quantitative' max='5520131.3959797379' min='-2198554.003758762' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[Latitude (generated)]' field-type='quantitative' max='8595358.6040991805' min='4080774.3387597254' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[sum:Cases:qk]' />
              <lod column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[Latitude (generated)]</rows>
        <cols>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{576E16FE-6ED3-436D-A9B3-0BE62171E458}' />
    </worksheet>
    <worksheet name='health expediture'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.012wlj9017zhmc1fmjwkp0koh0sj'>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[GEO]' role='dimension' type='nominal' />
            <column datatype='real' name='[Total Health Care Expenditure as Percentage of gross domestic product (GDP)]' role='measure' type='quantitative' />
            <column-instance column='[Cases]' derivation='Attribute' name='[attr:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Health Care Expenditure as Percentage of gross domestic product (GDP)]' derivation='Attribute' name='[attr:Total Health Care Expenditure as Percentage of gross domestic product (GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[GEO]' derivation='None' name='[none:GEO:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Deaths&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-28#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GEO:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' />
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;European Union - 28 countries (2013-2020)&quot;' />
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;Italy&quot;' />
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;Spain&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GEO:nk]' />
              <groupfilter function='member' level='[none:GEO:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Cases:qk]</rows>
        <cols>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Total Health Care Expenditure as Percentage of gross domestic product (GDP):qk]</cols>
      </table>
      <simple-id uuid='{0FCBE584-97CF-4CC7-9BDF-F2A4DC11D7DF}' />
    </worksheet>
    <worksheet name='new cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Romania versus Ireland</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters' />
          <datasource-dependencies datasource='federated.012wlj9017zhmc1fmjwkp0koh0sj'>
            <column caption='CEILING([Difference])' datatype='integer' name='[Calculation_1220194060012363777]' role='measure' type='quantitative' user:unnamed='Sheet 1 (2)'>
              <calculation class='tableau' formula='CEILING([Difference])' />
            </column>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Difference]' role='measure' type='quantitative' />
            <column datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[SMOKING]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1220194060012363777]' derivation='Attribute' name='[attr:Calculation_1220194060012363777:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country_Region]' derivation='Attribute' name='[attr:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province_State]' derivation='None' name='[none:Province_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[SMOKING]' derivation='None' name='[none:SMOKING:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[mn:Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:Date:ok]' member='3' />
              <groupfilter function='member' level='[mn:Date:ok]' member='4' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Confirmed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country_Region:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country_Region:nk]' member='&quot;Romania&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]'>
            <groupfilter function='member' level='[none:SMOKING:nk]' member='&quot;Daily smoker&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[mn:Date:ok]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[Parameters].[Parameter 1]' value='#4e79a7' />
            <format attr='title' class='0' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Calculation_1220194060012363777:qk]' scope='rows' value='New cases' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[dy:Date:ok]' value='idd' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[qr:Date:ok]' value='false' />
            <format attr='display' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[yr:Date:ok]' value='false' />
            <format attr='display' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Province_State:nk]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <encodings>
              <size column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Country_Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#1b1b1b' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='119' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Calculation_1220194060012363777:qk]</rows>
        <cols>([federated.012wlj9017zhmc1fmjwkp0koh0sj].[mn:Date:ok] / [federated.012wlj9017zhmc1fmjwkp0koh0sj].[dy:Date:ok])</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Country_Region:nk]</column>
          </partitionable-measures>
        </table-calculations>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='0' model-type='auto-season' range-periods='Week-Trunc' range-size='2' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{D227B5EF-866F-4922-9024-D0C804D60147}' />
    </worksheet>
    <worksheet name='perceived health'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.012wlj9017zhmc1fmjwkp0koh0sj'>
            <column caption='SUM([Cases])/SUM([Population_Jan2019]) *1000000' datatype='real' name='[Calculation_1369938746671693826]' role='measure' type='quantitative' user:unnamed='Sheet 3 (2)'>
              <calculation class='tableau' formula='SUM([Cases])/SUM([Population_Jan2019]) *1000000' />
            </column>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[GEO]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population_Jan2019]' role='measure' type='quantitative' />
            <column datatype='real' name='[Share of people with good or very good perceived health by all]' role='measure' type='quantitative' />
            <column-instance column='[Share of people with good or very good perceived health by all]' derivation='Attribute' name='[attr:Share of people with good or very good perceived health by all:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[GEO]' derivation='None' name='[none:GEO:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1369938746671693826]' derivation='User' name='[usr:Calculation_1369938746671693826:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Confirmed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-28#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GEO:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' />
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;European Union - 28 countries (2013-2020)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GEO:nk]' />
              <groupfilter function='member' level='[none:GEO:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[usr:Calculation_1369938746671693826:qk]' scope='rows' value='Total COVID-19 cases per 1 million population' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[usr:Calculation_1369938746671693826:qk]</rows>
        <cols>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Share of people with good or very good perceived health by all:qk]</cols>
      </table>
      <simple-id uuid='{B8474601-935D-4D83-8961-BAC40B345B2C}' />
    </worksheet>
    <worksheet name='smoking'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.012wlj9017zhmc1fmjwkp0koh0sj'>
            <column caption='SUM([Cases])/SUM([Population_Jan2019]) *1000000' datatype='real' name='[Calculation_1369938746675138563]' role='measure' type='quantitative' user:unnamed='smoking'>
              <calculation class='tableau' formula='SUM([Cases])/SUM([Population_Jan2019]) *1000000' />
            </column>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[GEO]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population_Jan2019]' role='measure' type='quantitative' />
            <column datatype='string' name='[SMOKING]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Value]' derivation='Attribute' name='[attr:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[GEO]' derivation='None' name='[none:GEO:nk]' pivot='key' type='nominal' />
            <column-instance column='[SMOKING]' derivation='None' name='[none:SMOKING:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1369938746675138563]' derivation='User' name='[usr:Calculation_1369938746675138563:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Confirmed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-28#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GEO:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' />
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;European Union - 28 countries (2013-2020)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GEO:nk]' />
              <groupfilter function='member' level='[none:GEO:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]'>
            <groupfilter function='member' level='[none:SMOKING:nk]' member='&quot;Daily smoker&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[usr:Calculation_1369938746675138563:qk]' scope='rows' value='Total COVID-19 cases per 1 million population' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[usr:Calculation_1369938746675138563:qk]</rows>
        <cols>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Value:qk]</cols>
      </table>
      <simple-id uuid='{AC02231C-DC49-4708-9716-60ECC9FDC26E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' name='Sheet 1' show-title='false' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8000' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]' show-title='false' type='color' w='14000' x='14100' y='3250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='27' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Sheet 1' show-title='false' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]' show-title='false' type='color' w='14000' x='14100' y='3250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F2D90B81-FC1E-42A3-B917-2FFC9C1C75A6}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' name='new cases' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8000' id='8' name='new cases' pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Country_Region:nk]' type='size' w='14000' x='67300' y='16625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='15' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='new cases' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='8' name='new cases' pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Country_Region:nk]' type='size' w='14000' x='67300' y='16625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C4DA9AA1-ABC5-4F77-988E-CB8F54EA33B3}' />
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' name='Sheet 2' show-title='false' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='10625' id='8' name='Sheet 2' pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]' type='color' w='14000' x='17300' y='67000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='10' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='9' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Sheet 2' show-title='false' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10625' id='8' name='Sheet 2' pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]' type='color' w='14000' x='17300' y='67000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1418572B-0472-4063-AD70-9EA5EC73FF38}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{725F9DDF-7299-4F4E-A0FC-1A194B231377}' />
    </window>
    <window class='worksheet' name='new cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Country_Region:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Country_Region:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[dy:Date:ok]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[mn:Date:ok]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region (copy)_1220194060021960706:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{C50DAED2-BBB5-4582-BC97-730C6A832BC3}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='new cases'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{72DA0A32-EC07-4837-8D08-FADFADA387FE}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FAB9A85F-5EC1-4E51-9109-7269D08108E0}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634358071297:ok]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_943785634366201862:qk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Difference:qk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Calculation_943785634363527171:qk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tyr:Calculation_943785634357641216:qk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tyr:Calculation_943785634363527171:qk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C845358-A04C-4A78-9378-22342FE9D052}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{85A17F60-AAA8-4D4A-A1E3-9CACD40DC432}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO (Sheet11):nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[sum:Cases:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B9A7A03-842D-4CD6-B75A-3029C748DC31}' />
    </window>
    <window class='worksheet' name='perceived health'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_1369938746671345664:qk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO (Sheet11):nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[sum:Cases:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AA85ED1E-C528-4399-97AE-F02AE1E4E245}' />
    </window>
    <window class='worksheet' name='smoking'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_1369938746671345664:qk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO (Sheet11):nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:UNIT:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[sum:Cases:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F049DC5A-D5B7-4C9E-AD97-DEB40F03E67B}' />
    </window>
    <window class='worksheet' name='health expediture'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_1369938746671345664:qk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO (Sheet11):nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:UNIT:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[sum:Cases:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59DE1D13-7F4A-4CDB-8122-0FD7AE7D42AB}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[sum:Cases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{EA667960-D233-4FBD-95A5-0B52CF98D0C0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      CfT19REMBvF4PHi9XhwOB3q9HqfTydjYGBqNhoaGBlJTU2lqasJkMqFUKunp6SEQCHDixAlE
      USQ3N5empiaee+45CgoKePnll+nr6+PSpUsA9Pf3k5eXx4kTJygqKrrjv3NfXx9ZWVnzXu+0
      cwBdehEbswYJKM1Trmu1WsKAzpiIQYzg0+ixGHx4g1FMGgXRaHTejVzqtLS00NraSjAYJCkp
      CafTCYDf7+fXv/41hYWFbNmyhZMnTxIMBklNTQUmn6iVlZXYbDYyMzPp7e2lrq6OgoICOjo6
      yM3Npbe3l9LSUpqamjh48CCvv/467e3tbNy4kZMnTyKKInfffTff+c532LZtG2NjY1RUVLBz
      506OHTvGpk2bMJlMXLx4kcHBQa5evcojjzxCVVUVoVCIhIQEysrKEASB5uZmcnJySEtLQy6X
      s3fvXs6ePYvdbkcul2O1WolEIov5U8870z6qff2NNPZ4GBq9sSufDIbzj/RSmJ+LItGCLT2D
      vKL1yCMrq2uMlwMHDpCdnU1KSgqFhYWIokh5eTlarRaFQoHJZALA4/EwPDwMgM1m48iRI6Sn
      p/PCCy9QUFDAunXr8Hg8jI2Nodfr8Xg8hEIhjEYjHo8HAJVKhV6vR6VS4fF4GBoaoqysjOLi
      YrRaLXv27OHs2bPodDqKioro6OjA6/WiVqvZvXv3lJ7pWvRuOBwmOzub7u7JYa3NZsNsNpOf
      n09hYSEej4eJiYkV94CbdhKMGOHq1XoSLRZsOWtmXKE0CV4YQqEQJ06c4MEHH1w0G1paWohE
      IpSUlNzx716oSfC0QyDfYBsnzl9hbU5GXA4gsTCo1epFbfzAooz9F5pph0DaxHTu2b0Njd50
      J+1ZdnR3d1NVVRX32LiysvKWfxdFEafTicfjobKyksbGxrmYKTEN0/YAwfEBQrpUDBOuO2nP
      suPSpUvcf//9vPnmm+Tk5BCNRklMTGR0dBSZTIZWq8VoNOJwOGLj8cTERLRaLf39/bS0tLB9
      +3YMBgPHjx/n/vvvR6FQ0NHRwdmzZ3nqqacoKyvjlVdeYf369Yt9uyuOaXsAXfo6TOE+bAXS
      j34r/H4/P//5z9m1axddXV0MDQ1RV1eHzWbD7XbT3NyM1+ulsbGRtrY20tPTqa+vp76+Hp/P
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      Zy74/wFuQxQOxdvQcwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='health expediture' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='new cases' width='192'>
      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
      lOPu4oPHlh1SAFTmzs491cp1t5t8Konu8R74Zp29cAm3WSOazD6xnaIoaHYbd2gcV5d//E/5
      w6OUs0lqzdYT241PzeB36+ieADNTY0/c9s7fruDRFRLpEgHf/oF1eYPMTO50/C9ffpHE+jrd
      qhgZnyLoc6NqGoVslrPnz3VpCbNzZ9EUBZ/PRzFfomXuHwCvRyeWKnPx4syB4wMUo4UWHGHY
      7yWRTOH173/JW9VdVPJppufOMX/pErXcNrny/le2PB4XiWSWCxfm6NRyjE6f6zoLo2Z3aGt+
      5ucm2d5O02o8eX/tJzQ8zkjY/3i9Pa/laVgmkbVNMrkUhvXkCbOa1TJN00bXDv5Ur5Ty5Et1
      hsLBA9tm8xXOzR08h47qcuPS4OzZ7m8ogO3YJrlsjkwmQzqTJZZM7dvOtk0imwky2zEy2Ty6
      29N1pzarRTLZLLFkkkwqBR4vri5tM8kYuWyOQqWOqboJe7u1tNjc3CKbSoDuITQ5xXCXtrFo
      DBWLSqnEZjxFOhFj/x6hxVYsQadRJ1/Ig6qjdTnVaFcLZEp1qtUqhVyGWscm0GX72/EYJlCt
      1Sk1LGbGuu1Xm62tOEaria25UCyLcxfOd2nbXSG7TTaXJZ1/NBjp/wMm6jlLn1SqNwAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='perceived health' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='smoking' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2deWyk93nfP3PfwxkOOcObHN7c+7J2tbK0Wlm2FDlWkNhG2iYVkqYJigZG
      AiQFmqCHiyY9gzhACqRAm7ao4Tp220RJHEtWbctZWVpZ0mqtJbm8OTM8Z8ghOff5Hv2DS2rH
      s9ydl8uZIXffDyBwNfPM837f43l/v/f3PO/vp5FlWUZF5TFFW28BKir1pGoBIIpi1ewlSUKS
      JFXLQ9jKslw130dJy6FpAarZE1PqW4l9NX0fJi1H1feD7A9NAKio1AM1AFQea9QAUHmsUQNA
      5bFGDQCVxxq9EuNYNMxyeB1vWxcb4UXMziYs5FmPZ+nztzM7G8Db3oPP46yWXhWVA0VRADid
      DSyurBKLruFs7iS9tUYR6PI1MDE+x9C506zMzdLstiNJkqLhKqXjxkDF4+/VzgNoNJqqa1nd
      SPHW6CKfPNlJm8d+IL4lSUIQBEU6KkXp+dz5r9ZaFAVAXoS+nnYmZ5bRmh0UBQENMtlsFotZ
      TzqdpiiCVqtFlmV0Op0ioXp9ZXJ2LjattvIeXKW+ldqLoohGo6m6lv/8Vx8yFlhjbH6Nf/Nr
      n3po3zsXmxIt1TqGOzdLJdfLQWlR9AwgFrIsrMY5duokVm2ets5uejrbyGJh6PgImfUw/r5e
      RcJUKmOwsxG9TstAp6feUh4pNNUqhhNFUVFEC4JQtRZAiW+l9kpbgP1qkSSZWCqHy25Gq9U8
      tO+d8oNK7at5DJW2AAepRVk7onKg7Nx7NJp7X9B3o9VqcDvM1Zb02KEGQB3Z2NhgcXGRY8eO
      IcsyhUIBWZbRaDTkcjkEQcBoNBKNRtHpdPh8Pt58802efvppkskkdrsdg8Fwp4WQ2NzcpLGx
      kfn5eYaGhjCZTPXexUOPGgCHgOXlZSRJIhQKkcvlaG1t5d1330WSJPx+PyaTCbfbTSQSwWKx
      cP36dbq6uhgfH0ev1+Pz+Ugmk+RyOQDcbjeLi4v09/fXec8OP2oirI5oNBpu3LhBLBbjgw8+
      IJFIYLFYSCaTeL1ezp49i9vtpqWlhba2NvR6Paurq+h0OlZWVhBFkUKhwM2bN9Hr9Zw8eRKD
      wcDk5GRVq2sfJdSH4Ie0r9VDcKW2gUCAyclJrly5gtO5d0JSfQjeRu0CPWIMDAwwMDBQbxlH
      BkUBEN+IsLS6hsfXxkZkBaPNhcMgbpdC9LQzNxegua2HlqaGaulVUTlQFAWAw91Mcy5NJp0m
      my8ikAajjh6fi8nbcwydO8PK3CzeRodaClEHLWophHJ7RQGwvrKAZHLTbMlR1LaT2QojCAbS
      mQxWi5FUKqWWQtRRixJbtRRiG0WjQHqDgVg0TF7nwCylae/qxd/VTl5rY+jYCLmNNfr6+xQJ
      U1GpJ+oo0EPaH7ZRILUUQpm9mgeoIZIsIyp8NlKpLmoA1AhJkvnDb1znl//dX/P+5Eq95ajc
      QQ2AGiFKEjemVknnityai9Rbjsod1ERYjdDrtHzp80/w0WyYn/nkUL3lqNxBDYAaodFouHyi
      kyeGWxUP4alUD7ULVAUSiQQbGxsln8myTDAY3PM3y8vLVValci8U3Ypy6TjBxVU6e/pIRlcQ
      DTacRojEMvg7WwnMzeHr6sVhMVZL75EgkUgQi8X40Y9+RF9fHwsLC7S1tREOh4nH44TDYXw+
      H6urqwwNDTE9PU06nebzn/98vaU/digKAFlroLPVRXB2jngyQXdvLyvhdTwNVibGJmgdHGQ5
      FGRoaEBRahtQZL9jp8S+Wlp+UtPOvzc2Nujo6CCfz7O2tobb7UaWZZaXl5mbm0Ov13P16lVe
      e+01Tp8+zcrKyj23qfS4HNVjWK39fJC9ogAoZpOsbuXoaW9gKdZAYmMNnV6PwWBAECSMRhNa
      rWZ3g0qmDVdiv58DUC0tO7VAd7/W6HA4GB4eZnJykq6uLrxeLy6Xi8bGRtbW1jAYDPj9frRa
      LRcuXGB6ehq3233PbSo9Lkr2c0d7NXzv53xWaz/vZ68oE7wUnCWRKdLS3slWeBGtdbsaNLKV
      YaCvk5mpGXydfTS5bGomuA5a1Eywcnu1FOIh7dUAeHh7tRRCRaVOqAGg8lijBoDKY40aACqP
      NWoAqDzWqAGg8lijKACyqRgTE5OkckUK2QSLq1ESm2vMzIcQhQIzUxMkMvlqaVVROXAUZYI1
      ehOdrQ2Ew5tI2XWKGgsZijQ1WLk9Nkn70BAroRCOO6UQ1cwcQuWzQjxOWpT4hsOju16ZYGUL
      ZKQTROJF2lxGxtezxJJx/O3N6PU6RFHCoDeg1Sqf5mJHpNI6lmr4PupajrLvQ18LlEqlEHIF
      CvomLl44x3o0hlbKsbyR4fjJYWamxvB19u9rWhQl9kozwdXUAijKBFdTi1LbavlWaq80E3yQ
      WspKIa7/4DXCWzl6R85wethf8UZ+ErUUovZa1FII5fZlZy2bzaHOWaDyuFAWACPHjmPQ6Wlq
      UteiUnn0KQuAmeAyn3r+GeYmJ+qhR0WlppQEQDadoKOlib/8q9fp6lNXF1F59CkJgORWlERW
      oK21hXwuWy9NKio1oyQA3I0exsZGMRn1rK6G66VJRaVmlIwN6YwWzp09i8XmxNfSUmacSW4R
      WgrT3tXDxuoiOquLBpNMJJalt7uN+dlZfJ19NNjU1QlVjgYlAaDVG9laW+G94Dt0Dz/B1SfP
      lhjrjBY6WlxE1uN0dHQyOxsgq9fS7LIyMTpJx8gwq6EgzsHql0Iclpfij3IpxGHyfWhKIVq7
      +xElAavdVmacTcZYTwr0dbUwNTmNv3+A5VAQrVaLJEnotDq0KJ9yY8f2KE/pUU3f1drPnd9U
      w/dh2s+KSyFCUx/x3s3t4c+BlvLMZjqdoZjNsx7doCiIRCLrNLntrG5lOXZqmNnp249dKYTS
      TLBaClGOJElotdq6aCkJgO6h0ySSKWYXVhGE8iajvbuX9jv/9vk+fkZo9G7/HTl+smJRKiqH
      gbIuUGOzjx6tiWQmWQ89Kio1pazdFgtZpmaCjBw/Vg89Kio1pSwAQitrXL1yicmxsXroUVGp
      KWUBYNYU+T9//leEgrOEwlv10KSiUjPKngEE9DzxiXMUsdLd4q6HJhWVmlHWAjjtdjaimzhd
      rnroUVGpKeUPwWKRfLGIRls+bppObDJx+zaJTI7A7BTh9S1i0TBTMwGEYp6piXFiqVxNhKuo
      HARlXaDNeAKft5kfX/8BXs/P0Oyy735nMNvpaHWxMDePo8lHfGONuAaaG6zcHp2k6/gxIsEA
      DWopRN20HFXfh6YU4tz5S6Syebq6erCZS5c6ysQ3iKYlejqb2MxpQKNBg4xGo0EGNFS22MLD
      ojTdr1KOegy3KQuA9dVFxmcX8A+foq3tJwIgm6OQzZF3d1JMLuF0+zBrckRiWY6fHGZ2ZhJf
      Z9/uiimVlgfAx+lwJVRqr9S3EntZlhXtazW1KNUty/Kh0Q31OZ9lARCNJblw4QI2R0OZcVuX
      n7Y7/25sGN793N28/Xf42ImKRamoHAbKwsLjsvH+BzdY30rUQ4+KSk0pC4CNjS2aPC7W1zfu
      Za+i8khRFgBWq4VkMoXNbr+XvYrKI0VJAISmPmIzmWdrK0ZREOqlSUWlZpQEgNlqQ5RkfD4f
      DpulXppUVGpGyShQsVAgmdx+DyCXL9ZFkIpKLSkJAHdzK2fObL8L7HA1lhkLhSzzixEGetqZ
      nZ3F7PBgv7NQdr+/g9mZ7YWy3Q619VA5GpQEQHR1gWB4k9XVCAMnL9DY4CgxLgoShXyGYjZF
      TtSS3dwga9Dic9kYH52k58RxwoF5XFUuhVC6CIRaCnFv28NUCiFJEhpNZZUEB6ml5Bmge+g0
      WiGLs6EBi8lYZmyx2tDpNAhCEb3BCLKELO9kQ0GWapNer/RAqezNYTuG9dJTlgmWRPFeHwMQ
      i4bJZXIki1r0Uh6bpxmnUSISy3LsxDBzs9M1KYXYuVschjT+US6FOEy64ZCUQkiyhF6vv+cP
      XE0tnG3ang3C19x01+fbf4dGjlcsSkXlMFAWAJevfIaiIGIwqtMbqjz6lNzmhWIBQdzuXgSD
      8/XSpKJSM0pagOCta/zNByu0NVowOj0MDQ7VS5eKSk0oCYC+c8/xqyP5O/VAajWoyqNPSRdI
      o9GyFgkjyTIOh7NemlRUakbZUE9g/D2++r++wUeTgXroUVGpKWWjQF19Q9hyGlzW8kSYkM8w
      uxBmuN/PQnAOjdmJTSf8RClEP41OtRRC5WhQ/k7wxhahxRCZ7pN0d7WXfFcUZUQhTy6xzmJk
      i45OB9FEila3jdujk/hPnSQ8P4fL3r+7EHOlSJJUsb3S9QGU+FZqv5OUOyxalPhWco6qqVvp
      LB8HqaUsAPyd7cwtrnH8+EiZscVqQ6sFGWjytZNJbKLVaBAlEa1WiyiISHyc1laS3t7JHlfK
      TiazGr6V2O/YHiYtSqil7nxBQJLBYrp3pUE9jmGZktmFFV54/hluj93C8+RFtNqPfxiLhsln
      86REE1YSaNzNOAwSkViGkZPDzM/O0qqWQtRNS6W24p3Sg1rqjqdy/JM/+X8UBJHf+5Xn6PA6
      S2zhkJRC9Pl7CEc2aGywE0/nSkqbXU0tnLlTCkHjx7NGNNxZVH5wWJ1S/bCztJ7gX/63H+Cw
      GvnXv/IsDv2978YHTSZfZDORRZJlEpl8TbZZCWV7b7Q4aCjkwOZT6/ofQeaWN4nGM2zEM0Rj
      WRxWc02229Jo5ytfeoGiIOFvPTzzzpYFwPjYhyQzAm53kk7fJ+qhSaWKPDHSzheujOCwmuho
      djz4BweERqOh01s+11S9KQuAjiYX4ZyJlubmeuhRqTIWk4G//8JpxaN0SllaWmJsbIyBgQEG
      BgYAdkfLisUi2WwWp9NZ9/cSygJgZSuLLMVYymXxd7XWQ5PKAbOwsIDX60WWZSyW7W5tKpUi
      m83i9Xqrsk2j0Ug+n8disfC1r30NnU7H+fPn+frXv87LL7+MLMvcvHkTn8/HZz/72apoqISy
      ABjq7eZHNz7izJMX66FHpQoEAgEWFhaYn5/n8uXLTE1NMTw8TCgU4vjx46yvr3PixMFOa6nT
      6Th27Bijo6O4XC5kWSYYDHLixAmSySR2u52zZ89SKBQOdLtKKQuAwNIqeq3I3Mw07U0X6qFJ
      pQp0dHTgdrtZXV0lEong8Xhobm7m+vXrDA4OHvj2XC4X2WyW559/njfffJNLly5hMBhIJBK4
      XK7dYcl6z1JdFgBum4EiXTQ2NpUZC/k006Ewxwb7yCU3WN4q4jJtzwox0NvJzPQ0vs5+PA3W
      mohXqQy/3797sXu9Xrq6uujs7MRgMBAKhejr6zvwbep0Onp6egB48cUXdz+32WxltkonOThI
      ygJgeTVMcGmZzoHzDPd3l3xXlDQgFZAlkeBSBFlrYiMn0u6xMX5rkr4zp1idn8Xt6Fe8U/tJ
      nR+W8oPDXgrR3r5d0nLlyhUARka2s/y5XI7h4WH0ev0Dt/H4lEIMnsRoMGBtLF8gz2KxotFA
      JrFBOpsjGtuip82DIAjo9VqKhSKSpLw8AA5XicDjUgphMpno7e2tim+lupVMi1LVUoh0OsXF
      p68yNV1eDh2Lhsnn8mQkM+fPnmErlkQnF7ZLIU4MMz83R1tXbUohQF0g42Fsd+64h0V3vY5h
      WQCImRivv/4Gnf0ny4xLSiEAt3s7seG8M4ncwFB5AZ2KymGmLACOn7vEMVmDRlvfBIWKSi0o
      CYDF2XE+GJ1gLbzJJz/zWY73te/1OxWVR4KSjlEmncJmc3Dq4kWysfV6aVJRqRklLcDQ6Yv4
      CwUMBiOLi8E6SVJRqR0lATD13nf46x8t0OQw4PR20NXVUydZKiq1oSQABi98il8dzmExG0ml
      kvXSpKJSM0rnBdLqcTpszM5O0djoKTMu5tKMT84iCUWmJ28zF1omGl5ifGKaQj7L+OgtorF0
      zcSrqDwsJS3A1mqAN9+9hUEnY3C0MNBZ+k6AKGvRUkSj09Pb62dyJoSY19LZZGd8dIr+M6dZ
      nZ+l0dmnlkLUSctR9H1oSiGm5kNcuHAODTKBhdmyADBbLKABWSgwNRNgcGiY+ZkpCsUiBoOO
      Qj6PJMmP1UvxoCw1f5gywVqt9lAcw50VXOqeCe7t6WZqPghAe3d/mXEsGqaQKxCOboIssbS8
      SntL824pRGBujvbu3qrXAimddqXadUmHRctR1b1TTlL3WqBiPkcsFgPA5St/UcHV1ILrTilE
      W+vHb4s57tTN9Q8OVyxKReUwUBIAkiSg0epp7/Iz2NtRL00qKjWjJADa/SOgM/HO2z8kEkvz
      4tPn66VLRaUmlARAeHGOUDjO8z/9xbIlUlVUHkVKHo3FYp7oWoS3//Z76vToKo8FJS1ALJ7k
      xLkL2MkytxqvlyYVlZpREgBtnX7mQ0HWJS1dPQf/orSKymGjpAsUCs4xcPwc504NsxAMlhkX
      cynGJmaQJYHpiXEWV9ZZX11kfGKafD7D2Ogt1rdStdKuovLQlLQAp8+e5/vf/x4FWc8zz14t
      MxbRo9MIZOIb2DwdZGJr5IDOJju3R6cZuFMK4WmobinEju/DUn5wFEshdrKvainEXeiMVj79
      4kt7OjKbzaABrU5HIZ1HEEU0yOQLBYwGHblcDkH6+CVxJenqndR8JexccErT/tXQsqNHSdaz
      WlqU+obKX4qvtu56nc+SAAhNfcT1mxMADJy8wPnjpeUQsWiYYr5ISjBgEDdwtHZgJk8klmH4
      xDDB+Xk6e3r3tUKMEnulqfNqatmP/WHwvXPHPQy666mlJAC6h06Tzua4dXsKQSzvwtxdCvHx
      Ahl27K7t0um+AXVhbZX98d7EMq/+cJrPXR7kk6e6arbdslkhcpKOBoeZnLpQtkoN+Yu3Jpla
      3KRQFGsaACUdI1mWsdvtPHP1BbwedaFsldrxucuD9La6efmpg5+o936UtACF1AZvvfUWra0d
      jJxWZ4ZWqR2XT3Ty9Omemm+3pAUwOZp48vwphGKBzCFayEzl0SIQCDxw2FOWZdbW1qqupewZ
      IBZP0NbeSiy2Aagl0SoHiyAIXLt2Da1WiyzLmEwm8vk8MzMzCIJAoVDg1KlTJJNJnE4nU1NT
      rK+v89RTT1VlOaWSAJibnebi5StsxhK4PY0HvjEVlfn5eURR5ObNm9hstt3VYwRBwOv10tra
      yujoKFeuXOGHP/whZrOZW7duce7cOazWg193oqQLFFmc5Y3vfo8PPnif6fmlPX8kCXluj48x
      H1pmbWWBsdtT5HNpxkZvsbapTqdyVNlKZhmdj9xzCPygKBQKvPLKK/j9fsxmM8FgEKfTiSAI
      NDU1MT4+TldXFyaTCa/XiyiKNDc3K07wVYpGvqszFo2u4/E086CWppCJMzYVQGc0YzXo8DXa
      mAuuMXD2NKtzs/T19yGKoqImaz9Tex+GF9EPk5aH8S3JMr/5x2+wHE3yC8+f4OeeGd7T9qC1
      KM0EV+2l+KamypZGLeazOBp9ZGPriBoDuVwek1FHNpPddykEbC+rUwlKD5gS30rtd2qBlAR7
      tbQ8jG+NLCPdCWZ5Dz/V0l3P81nSAlSKLIksBAOYnE04DBKRWJaeDh/BwDwtnb1YTdtL7igR
      ub3KTNkz+T1RukCGEt9K7Xdauv1q+WBqhT/9m5s8c6qLv/t8+ZoMSrQosd1ZJ/hu+/VYhoVI
      jJN9Poz60nNXzWMoSRKyLFd8vRyklsq93IVGq6O79+M6od47VRG9/bVNYjwK/O2PQ6xEk7z2
      o9l7BkAtaXZZaXY9Xgsc7isAVA6Ol58aJJMrcvlEbYacp6ammJmZoaGhgSeffBKAGzducPbs
      2d2hyWg0SnNzZd3ho86+ukCVoHaBaq+lEtubN28SCASw2+0sLy+TSCQYGRmhtbWVUCiEyWTC
      YDAgSdLu35WVFURRpKuri2eeeebAddezC1SdsSWVMsbHx5FlmXA4XFcder2e48ePk81mkWWZ
      y5cvo9FoSCaTDA4OIggCoiiSTqdZWlrCaDRy+fJlTpw4gdForKv2aqB2gWrE5OQkWq2WxcVF
      gsEgWq2WlpYWIpEIzc3NLC8v09PTgyRJTE1N0dXVRW9vL6FQiKGhgysz9/v9BAIBnn32WQqF
      AplMhpGREVKpFN/85je5fPkyw8PDpFIpisUiHo8HvV6Px+Op2lh8PVG7QA9pX2kX6J133iGX
      y5FMJmlsbKRYLCJJEs888wzf+973iMfjOBwO2tramJqaYmBggIWFBU6ePEl/f/k8rQ+r+16j
      QAflW6m92gV6DGhpaeHkyZM0NzcjyzJGo5G+vj70ej3Nzc0899xzuFwuDAYDDoeD1tZWisUi
      XV21q41/HNlfHkCWCMxOY7A1YpSzrMez9Ps7mJmZx9vux+dxqC3AQ/pOpVKEw2F6enpqlgc4
      KN9K7Y9cHiAXX2MlmqTFYCdXKNDlbWBibJaBc9ulEM1u2+5OVYqSt/x3/FY684QS30rtdzLB
      B63FbDbT09OjSIvS/ZQkCUEQquJb6flUMjPEQWrZVwBodQaafa0I2SSyLJPNZTGZ9WTSGYqi
      vDuerDRdXa0WQIlvpfZKW4BqalFiu3OxVcO3UnulLcBBatnXM4DJ3ojLJOH2ttHd2UpGMjN8
      fIT0+gr+vt79uFRRqQv7GwbVaPC1f/xw5r+zQoa/b+BARKmo1Ap1FOgRZj2WZnVDfT/jfqgB
      cETYTGR5/b1ZNhKZiuzDmyl+/Svf5kt/9BozS5tVVqecrWSWWCpXbxlqABwV/tOfv8efvPoB
      f/x/36vIPlcQKAoSgiSRyxerrE4ZS+sJfv2Pvs2vf+XbdW+h1FKII4LbaUGjgUanpSL7bl8D
      /+ofPEtREDnu91ZXnEJiyRzp7HZQxtN5fG5b3bSopRAPaV+ralBBlFhci9PpbUCvu/e2jkoi
      TJJk3hlbRKOBJ090wp0cwJFJhKnUHr1Oi7/VXW8ZB4JWqymZ/lCqzj24Mi37/aGQT7G6tkk6
      vsl8aAlJFJibmSadO1z9zaNGsVjk+vXr5HI50uk0W1tbFAoFrl27RiqVIhaLUSgU2NraQpZl
      VldX+fDDD+st+56kUileffVVRkdHdz9bXV29p20mkyGVqv3iKvtqAWRZJjAfII+VOAUanWYm
      xifw9fazEAwwPDSwa6fUrxJbpfbV0qLU/kG2+Xyeb37zm5w8eZJvfetbDAwM4PF4eP/993n7
      7be5ePEiW1tbdHd37y50seOzmrpv3LiBJEl4vV5u3LjByy+/vPu5z+ejoaEBp9O5Wx6Sz+eJ
      x+NotVpeffVVent7+e53v8sLL7zA9PQ0DocDWZZJJBIMDg5it9u5du0aHo+HJ5544sB0389+
      XwGQ2YoQTWRJpBP0dngxm0wUCnHMZjN6rabspFSCkhVllJ7s/axWo1SLkmlR7ocoikiSRG9v
      L83NzYyMjHD69Gnm5+cJh8O0tLSg0+no7u4mn89TKBQwGo27v1OCEvudVVZisRjpdBqbzcZr
      r73G7du3OXv2LOvr6xiNRqxWK2+88Qa/9Vu/hSiKfOITn2BwcJB0Os3i4iLDw8M0NzcTi8VI
      JBLY7Xb8fj/Ly8tEo1Gy2SwTExOcP7/3GtUHuZ/7fwiWRcJrm+jEHJFYhoHeDmZm5vB29OJ1
      29WH4H363rl5wPb+pdNpTCYTGo0GURSRZRmDwQBsB10ul8NkMqHT6ar+EPzRRx8hCALJ5HYN
      2MbGBslkkp6eHtrb20kmkywvLxOPx/nc5z6H0+nk2rVr+Hw+AOx2OyaTiWw2SyqVwuPxYLVa
      MRqNZLNZjEYj4+PjdHZ20tnZue9jqMReHQXap/33Pwzw59cm+Nmnh7h61l9XLbIs884775BK
      pejr66O9vR2L5f7DpYVCgWQyicfj2fVxY3qV0bkILz81hKehdHYIQRB2uzY71ZXpdBqtVovZ
      bMZkMrG+vo7ZbKZYLOJ0Oit+hfLIlUOrwLffnWFxLcFr785y9ay/3nJYXV1leHiYjY0NRFFk
      cnISn8+HyWSiUCiQy+VIpVLYbDbi8TgjIyMIgsCtW7fQ6/VcvvwUf/jN66SzRYqixK99rrwL
      ojcY0MBuC2Q2m0u+37nTAxWXWdcbNRO8T7747DFO9nr54rPH6i0FgE996lPMzs6STqdZWVnh
      iSee2O2SSJLEzZs3MRgMGAwGLl26RCwWIxqNsry8zNjYGFqthtN9LVhMeo51l06JIogS//HP
      3uWV3/8LRuerP2V5LVFbgH1y8VgHF491KH45o1osLi7S0dGB3+/HarVy48YNLl68SCKRoLGx
      Ea/XSyKRoLOzE7vdTn9//+4zgM/nQ6PR8Nt/50kKRRGzsfSyyBUEfjy7Sq4gcms+wqk+3x4q
      jh7qM8AD7JeXlwkEAly6dOmePkRRJJFI4HA4KtpGvecF2kHJQ7Asy3z/w3mmF7f4+eeO37Mc
      QxQliqKEyaBDo9GUadmZasXhcJSNmN39DCAIwgPnlT3IY6j78pe//OWKPSlA6WSnh3VG5tde
      e43Lly+zsLBAsVgkEomwtbXFxMQEiUSCcDjMD37wA1paWnjnnXewWCy8/fbb5HK5kj7xQWg5
      SFuo/BxpNBq6vE4uHuvAYjKUfS+IEr//1bf402/dxN/qoq3JUaJFlmW+853vkEqlsFqthMNh
      isUiwWAQm83GBx98gFar5Rvf+AZNTU3odDpu3ryJ2+2+54P0QR5DNQAeYN/d3c13vvMddDod
      09PTxGIxMpkMMzMzGAwG8vk8PT093Lp1C5PJtDssGIvF7jmUt+NblmUiW2m0Gg0G/b1bytdf
      f53JyUkaGxux2R5cMLbjOx6Ps7GxgdNZutDhW2+9hc/nY3V1lYWFBcbGxlhZWSGfz2O1WpFl
      mUwmw9ra2u7EWcFgELPZzPr6Omtra+h0urKH32y+yH/9m5tkCwK+Rjun+nxlARAKhbhy5Qo3
      b97EYrEwNjaGTqcjFosRCATQaDTY7XZ0Oh2SJDE/P8/s7CwjIyP3PT+VUPH06HGtdkwAAAti
      SURBVJUiSyKLoQB6qxunSd6eHbqzhcDc9uzQdkv5XeKocvv2bZxOJydPnuTGjRtYLBaOHTtG
      Pp+nqamJZDLJ0tIS58+fZ3Jyko6ODux2+wOD8+3RRb7yv9+l0+vk3/+j5zEZyk+FTqfjxRdf
      5M0332R5eRmn04lOpyOfz2MymYhGozQ2NnLq1Cnef/993G43W1tb9Pf3s7S0xJkzZ+jtLX9F
      dWFhAafTic1mI5lMkkqleOuttxgcHNxdqmhmZoZjx47hcrmYnJxEFEWCwSD5fJ5XXnmlxJ/V
      bOA3v3CR6aUNfvpy+VuBGo0Gg8HAG2+8gcfjobu7m2AwyNLSEl6vF6vVik6nIxwO43K5SCS2
      l+i9O9AS6Tzf+P44/jYXV053cfv2bQKBACdOnKCjo4NisUgymcRkMmEymXbzI7BdXpLNZvF6
      y6ti910K0eRrY34+QEKnxdNgYXJskpb+ARZD26UQSksVdvwqsatFKcTdKfmrV6/u/vuFF14A
      StcH6Onp2f1+Z/6fvXxHtlIIosTaVppiUSybjhy2+66hUGi3/9rf308mk8FqtbKxsYHH46G3
      t5dAIIDVaiUSiTAwMIDf72diYmK3pdlBFEXefPNNzGYzLpeLsbGx3SRWNpvl+vXrGI3G3W04
      nU7a29t3W4lsNovJZLrnfl063sGl4x0lx+5uuytXrpTYf/rTny45HrIslxzr06dPl/h44/05
      vnV9GqNex+neZpaWlnjppZdYWVlhdHR0d/TLaDSi1Wp3bwI7LaLL5So5fzvsb3p0DSwE5+nq
      HSCyFMJkMFIoitsZyTulEHdnNCth50Kq1FYJSnzvR4uSBTJ27H/qYj9Ws5FunxOLSX/PfRoc
      HCSbzXLlyhVCoRBGoxG/fzvp1t3djUajwWQy0dDQwPz8PD6fD4vFgtls5gtf+ALZbLbE79NP
      P737b1mW+fznP787UNHU1MSlS5fuqXlnqaKnnnpqdx8q3c9KuPtmmSsIrESTdLe4WF5P4HKY
      cVpNjHQ34bAa6W9vxGoy0NjYyOuvv86pU6f48Y9/zEsvvcTU1BRutxuPx8PAwADvvfce2WyW
      J598kmvXrvH000+XdYX2NQpUyMS5PR3E6W7CYZRYi2W3SyGmZ/F29NHstj0yo0AP4qjNDr3D
      ft8HiMYzWIx6bJb7Z3n3OzHWP//TNxmdizDQ6WFmaQOv28YffelFLEY9oiSj1WiQpO1rq1gs
      IggC7777LlevXuXDDz/kzJkzuzeknSHqnWDcSeDdzb5aAKO1gTNnTu/+f3Pr9t/jJ0/tx53K
      TxBL5fgPX38bg07Lb//8kzgUzoFTLW7NRfi9/3mNRqeFP/jHn8H+gCDYD4l0DhmIxjLIMmSy
      RURx+wLW67ZbFEnafq4wGo0YjUaee+45gLICup0AVEshjhiTC1HGA+sABCNxTvaaH/CLg2Nq
      cYMbUyt85hN9NP1EPVBkK0W+KLIRz5DNF6sSAL/zC08zHlzn/FArt+YitHkcOKymA9/ODmoA
      HEJO9fl47pwfg05Lf1tt3wL7gz97h7WtNGtbaX7zi6XPBM+e6UGUZLwuG82u6rzH2+Kx0+Kx
      A/DM6W5FvxUlia+9Mcp6PM0//Ow5GuwPvnGoAXAIsZoM/MYXLgK1Lyob7vIQS+bo79heKD28
      mWIyFOXsgI8Gu4UXn6hsqvZ6sBJN8hdvTSLJMsd6vPzUxQdrPbAAkCWBwHyAlk4/VpMaV0eV
      3/jCJX7lswUabNvdjn/z1bcIReJ85oKfX/+5i4p85QoCo/NrDHY0YtDrGAuscaynuSpdJwCf
      284TI+2sx9Kc6f84C18UJApCEav5gB6C70V0MYjD104oMM/IsLpa5FFFr9PiuqvrsHOx7uei
      /e/fvsnr783hcVrQajSsxzJ8YqSNf/ZKZeuM/SSpbIGVaJIen/Oe3xsNOn7nFz9Z8lm+KPDl
      //G3LKwl+N1f/CQne0vLUw4sAIqCjNNqQa+tfLxd5f6IksRX37hFMlPkl186U9WHwb34F790
      heX1BJ1eh+Lfau9cCxvxLGgADWgV5GPuRpZlfve/fI9QOM7fe/4EP//ciYp+l84WmV+NUSiK
      zC5vVS8AvB1tTI6P4u2o/8shjwoLkQR/+fY0sgzH/M08f772M2+bjXr62hv39SzySz91hidG
      Onh7dIHFtQQvPzXE2YGWfWvJF4SSv5Xgdpj50s9eYCma4oVP9JV9X5Vy6J0ki5JEmBJ7pYmw
      amtRkglW4jtfFPm3X71GPF3gn/7CU/ga7QfmW6l9NX3vZIIfdD7DmynmV7Y43efFZqm8Nbyf
      lqoEwM4MAtWqBoXtg1aLatCD1FFtLUf1GNZTS1WGa3Y2pkSkknICpeXQSldwOapalOpWUrJe
      7WNYLy1VeyNMReUoUNWX4ovZBLc+usVmMntfu8TmGuPjY2zEK5v7PpeOMzkbqMhWEvJMTtxm
      bTNRkX1oborx21MID7gvSGKRj26NIkoyi4EZpmaD3O8Xm5FlgssR0olNxsfHiGzE97SVZYnA
      1C020wKyLDH60Sj3e/M4k9xiYmYeWRaZmbzN6tre6wHIssTMxC0SOZGl0Bxj4xMUhL2rOzOJ
      TcbHxwlHY8xPTzAXWr7vfgZnJxmfnCW2EWF8bPS+514sZJm4PU5gcRVZErl1a+y+vsPLIUbH
      bpPJZpi8Pc761t5Tq8uyzNz0bSam51lfXWR0dJRkrvzhuaoBsLAc4fipE0TDy/e1s7uaaGly
      kc5WEACyxMLiKpJQ2eIK4cUA6YJIsVjZnKXJVIpCLkXxAQMNsiRhMOqR5QK5ohGLVCR/H3uL
      o4FcJonF7qKztYl0+j43BVmmwWYklZdYWw6RLUjcrwBZZ7CAmCe+EiSaFSkK99lXScJuNZIt
      SqSSKYRCllxx7/Ay39GbSkaRtA1o85n7BmNnTx9yPofV3UxLk4N0au+jotGb6PN3kU2nWQzM
      IaC9bwB4WzuxGyE0PUVa1DzwnPb09iHmssSTKfQagUSyXEtVA0Cvkclks0jcv3+8GVkmLZno
      9DU90Gc+HSeVK7C8tEKxgtcC9HoDbR09JLaiFWmW0OG2m+97UQDoDCYMOg2gRRAKFAThvgfT
      fOftpORmhPWUjL9z75kVNFodJuN21nJzK05iM0Isnt7T3mQ2gwZ0ej2+1g7S8b1bAI1Oj0mv
      B1mmIGrwumzkCntfSKmtNdaSIr1d7QhCnoIg3OdsysxMTdI7PEwsvERW46CjpWFv60Ka6WCY
      oYFuYskU0dUlkpnCnr4XAzM4fd14Gmy0dfYQ37j/FC1TE1P0jwyTyxXpaPeSTpUfw6rWLHT2
      +JmbC9DTc//xaxlIxaJs2aw0Ou9fZGWyuzl3xk08HsdQQfg2t/cQCs7T2r73VHt30+ptIlmA
      Bsv9h/Dy6Ti5XJHl8Aa+JjsZycDeuVKZpYUQxVyWTMFKPhVnfcuGt/HeGU1JKLAUzSAZlhk+
      cYaOrji2hr2PSzS8hFAQECxNGDbDOFs79rQVClkisSzafJjOtmY2kgX8jr1nkZMkKKTjRGM2
      3E4dGFvZ+8hIaNCyGFrAadeT3FwjZrHgdlrvaS2IEhqpyFJ4g1NnztETj+Ow7n0UNRotaytL
      dPf2EFlcoK2zZ09bENGgYSG0SHd3ByuRTfy9reU+1YdglccZdWY4lccaNQBUHmvUADjk5HI5
      ZFkil//44TCfr//yoo8KagAcct54/TVSm4tc+9Etbt/6kHA0zuuvvU4kssn6WoRsOs5Ho7cR
      JfVRbj+oD8GHnJs//C5ryTxDFy4TuvUhwfAWLpsecGPUxcikE5gsVvrOPstIl6feco8cagtw
      yBk+NsTcapJ2S4FIooDH7cJmt6GV4sQyBTra23F42mlprN9au0cZtQVQeaxRWwCVx5r/DwBW
      mtjThhnlAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
