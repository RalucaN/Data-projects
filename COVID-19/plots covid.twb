<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='covid_data' inline='true' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_data' name='textscan.0qfu0uu1ntecl7176u3jy01mwrbh'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/Raluca/PycharmProjects/Data-projects/COVID-19/covid_data.csv' dataRefreshTime='' directory='C:/Users/Raluca/PycharmProjects/Data-projects/COVID-19' filename='C:/Users/Raluca/AppData/Local/Temp/TableauTemp/1wiypir1cl4o1k1f2wvsd1brro0e/covid_data.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Smoking of tobacco products by sex, age and degree of urbanisation' name='excel-direct.02fv9rv0nw4s021ds8ema0npteu5'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Raluca/PycharmProjects/Data-projects/COVID-19/Smoking of tobacco products by sex, age and degree of urbanisation.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Daily exposure to tobacco smoke indoors by sex, age and degree of urbanisation' name='excel-direct.13x4x6t0ndpui716uplse0a357q2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Raluca/PycharmProjects/Data-projects/COVID-19/Daily exposure to tobacco smoke indoors by sex, age and degree of urbanisation.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Health Care Expenditure' name='excel-direct.0lebsd71tw0p2k1h5nbva1ismg8b'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Raluca/PycharmProjects/Data-projects/COVID-19/Health Care Expenditure.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='population data' name='textscan.060dyqh11ugg18132l08v0pul5e7'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/Raluca/PycharmProjects/Data-projects/COVID-19/population data.csv' dataRefreshTime='' directory='C:/Users/Raluca/PycharmProjects/Data-projects/COVID-19' filename='C:/Users/Raluca/AppData/Local/Temp/TableauTemp/0yslytc1eg34550zz4sfo1trpn5s/population data.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Share of people with good or very good perceived health by sex' name='excel-direct.0q2mmdw0nweoee114ch5w1jy7b8l'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Raluca/PycharmProjects/Data-projects/COVID-19/Share of people with good or very good perceived health by sex.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[covid_data.csv].[Country_Region]' />
              <expression op='[health care expediture].[GEO (Labels)]' />
            </expression>
          </clause>
          <relation join='full' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[covid_data.csv].[Country_Region]' />
                <expression op='[smoking].[GEO]' />
              </expression>
            </clause>
            <relation join='full' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[covid_data.csv].[Country_Region]' />
                  <expression op='[perceived health].[GEO (Labels)]' />
                </expression>
              </clause>
              <relation join='full' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[covid_data.csv].[Country_Region]' />
                    <expression op='[population data.csv].[GEO]' />
                  </expression>
                </clause>
                <relation connection='textscan.0qfu0uu1ntecl7176u3jy01mwrbh' name='covid_data.csv' table='[C:\Users\Raluca\PycharmProjects\Data-projects\COVID-19\covid_data#csv]' type='table'>
                  <columns character-set='UTF-8' gridOrigin='A1:M10001:no:A1:M10001:2' header='yes' locale='en_IE' separator=','>
                    <column datatype='string' name='Case_Type' ordinal='0' />
                    <column datatype='integer' name='Cases' ordinal='1' />
                    <column datatype='integer' name='Difference' ordinal='2' />
                    <column datatype='date' name='Date' ordinal='3' />
                    <column datatype='string' name='Country_Region' ordinal='4' />
                    <column datatype='string' name='Province_State' ordinal='5' />
                    <column datatype='string' name='Admin2' ordinal='6' />
                    <column datatype='string' name='Combined_Key' ordinal='7' />
                    <column datatype='string' name='FIPS' ordinal='8' />
                    <column datatype='real' name='Lat' ordinal='9' />
                    <column datatype='real' name='Long' ordinal='10' />
                    <column datatype='datetime' name='Prep_Flow_Runtime' ordinal='11' />
                    <column datatype='string' name='Table_Names' ordinal='12' />
                  </columns>
                </relation>
                <relation connection='textscan.060dyqh11ugg18132l08v0pul5e7' name='population data.csv' table='[C:\Users\Raluca\PycharmProjects\Data-projects\COVID-19\population data#csv]' type='table'>
                  <columns character-set='UTF-8' gridOrigin='A1:E35:no:A1:E35:1' header='yes' locale='en_IE' separator=','>
                    <column datatype='integer' name='TIME' ordinal='0' />
                    <column datatype='string' name='GEO' ordinal='1' />
                    <column datatype='string' name='INDIC_DE' ordinal='2' />
                    <column datatype='integer' name='Population_Jan2019' ordinal='3' />
                    <column datatype='string' name='Flag and Footnotes' ordinal='4' />
                  </columns>
                </relation>
              </relation>
              <relation connection='excel-direct.0q2mmdw0nweoee114ch5w1jy7b8l' name='perceived health' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E42:no:A1:E42:0' header='yes' outcome='2'>
                  <column datatype='string' name='GEO (Labels)' ordinal='0' />
                  <column datatype='integer' name='Year' ordinal='1' />
                  <column datatype='real' name='Share of people with good or very good perceived health by all' ordinal='2' />
                  <column datatype='real' name='Share of people with good or very good perceived health by males' ordinal='3' />
                  <column datatype='real' name='Share of people with good or very good perceived health by females' ordinal='4' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.02fv9rv0nw4s021ds8ema0npteu5' name='smoking' table='[Sheet1$]' type='table'>
              <columns gridOrigin='A1:H100:no:A1:H100:0' header='yes' outcome='6'>
                <column datatype='string' name='GEO' ordinal='0' />
                <column datatype='integer' name='TIME' ordinal='1' />
                <column datatype='string' name='DEG_URB' ordinal='2' />
                <column datatype='string' name='SEX' ordinal='3' />
                <column datatype='string' name='AGE' ordinal='4' />
                <column datatype='string' name='UNIT' ordinal='5' />
                <column datatype='real' name='Value' ordinal='6' />
                <column datatype='string' name='SMOKING' ordinal='7' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.0lebsd71tw0p2k1h5nbva1ismg8b' name='health care expediture' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:D44:no:A1:D44:0' header='yes' outcome='2'>
              <column datatype='string' name='GEO (Labels)' ordinal='0' />
              <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
              <column datatype='real' name='Total Health Care Expenditure as Percentage of gross domestic product (GDP)' ordinal='2' />
              <column datatype='real' name='Total Health Care Expenditure as Purchasing power standard (PPS) per inhabitant' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AGE]' value='[smoking].[AGE]' />
          <map key='[Admin2]' value='[covid_data.csv].[Admin2]' />
          <map key='[Case_Type]' value='[covid_data.csv].[Case_Type]' />
          <map key='[Cases]' value='[covid_data.csv].[Cases]' />
          <map key='[Combined_Key]' value='[covid_data.csv].[Combined_Key]' />
          <map key='[Country_Region]' value='[covid_data.csv].[Country_Region]' />
          <map key='[DEG_URB]' value='[smoking].[DEG_URB]' />
          <map key='[Date]' value='[covid_data.csv].[Date]' />
          <map key='[Difference]' value='[covid_data.csv].[Difference]' />
          <map key='[FIPS]' value='[covid_data.csv].[FIPS]' />
          <map key='[Flag and Footnotes]' value='[population data.csv].[Flag and Footnotes]' />
          <map key='[GEO (Labels) (health care expediture)]' value='[health care expediture].[GEO (Labels)]' />
          <map key='[GEO (Labels)]' value='[perceived health].[GEO (Labels)]' />
          <map key='[GEO (smoking)]' value='[smoking].[GEO]' />
          <map key='[GEO]' value='[population data.csv].[GEO]' />
          <map key='[INDIC_DE]' value='[population data.csv].[INDIC_DE]' />
          <map key='[Lat]' value='[covid_data.csv].[Lat]' />
          <map key='[Long]' value='[covid_data.csv].[Long]' />
          <map key='[Population_Jan2019]' value='[population data.csv].[Population_Jan2019]' />
          <map key='[Prep_Flow_Runtime]' value='[covid_data.csv].[Prep_Flow_Runtime]' />
          <map key='[Province_State]' value='[covid_data.csv].[Province_State]' />
          <map key='[SEX]' value='[smoking].[SEX]' />
          <map key='[SMOKING]' value='[smoking].[SMOKING]' />
          <map key='[Share of people with good or very good perceived health by all]' value='[perceived health].[Share of people with good or very good perceived health by all]' />
          <map key='[Share of people with good or very good perceived health by females]' value='[perceived health].[Share of people with good or very good perceived health by females]' />
          <map key='[Share of people with good or very good perceived health by males]' value='[perceived health].[Share of people with good or very good perceived health by males]' />
          <map key='[TIME (smoking)]' value='[smoking].[TIME]' />
          <map key='[TIME]' value='[population data.csv].[TIME]' />
          <map key='[Table_Names]' value='[covid_data.csv].[Table_Names]' />
          <map key='[Total Health Care Expenditure as Percentage of gross domestic product (GDP)]' value='[health care expediture].[Total Health Care Expenditure as Percentage of gross domestic product (GDP)]' />
          <map key='[Total Health Care Expenditure as Purchasing power standard (PPS) per inhabitant]' value='[health care expediture].[Total Health Care Expenditure as Purchasing power standard (PPS) per inhabitant]' />
          <map key='[UNIT]' value='[smoking].[UNIT]' />
          <map key='[Value]' value='[smoking].[Value]' />
          <map key='[Year (health care expediture)]' value='[health care expediture].[Year]' />
          <map key='[Year]' value='[perceived health].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M10001:no:A1:M10001:2&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Case_Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Case_Type]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Case_Type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cases]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Difference</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Difference]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Difference</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Region]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Country_Region</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province_State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province_State]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Province_State</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Admin2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Admin2]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Admin2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Combined_Key</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Combined_Key]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Combined_Key</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FIPS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FIPS]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>FIPS</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Long]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Long</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Prep_Flow_Runtime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Prep_Flow_Runtime]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Prep_Flow_Runtime</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table_Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table_Names]</local-name>
            <parent-name>[covid_data.csv]</parent-name>
            <remote-alias>Table_Names</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E35:no:A1:E35:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IE&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TIME]</local-name>
            <parent-name>[population data.csv]</parent-name>
            <remote-alias>TIME</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEO</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GEO]</local-name>
            <parent-name>[population data.csv]</parent-name>
            <remote-alias>GEO</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDIC_DE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[INDIC_DE]</local-name>
            <parent-name>[population data.csv]</parent-name>
            <remote-alias>INDIC_DE</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population_Jan2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population_Jan2019]</local-name>
            <parent-name>[population data.csv]</parent-name>
            <remote-alias>Population_Jan2019</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flag and Footnotes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Flag and Footnotes]</local-name>
            <parent-name>[population data.csv]</parent-name>
            <remote-alias>Flag and Footnotes</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEO (Labels)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[GEO (Labels)]</local-name>
            <parent-name>[perceived health]</parent-name>
            <remote-alias>GEO (Labels)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[perceived health]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Share of people with good or very good perceived health by all</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Share of people with good or very good perceived health by all]</local-name>
            <parent-name>[perceived health]</parent-name>
            <remote-alias>Share of people with good or very good perceived health by all</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Share of people with good or very good perceived health by males</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Share of people with good or very good perceived health by males]</local-name>
            <parent-name>[perceived health]</parent-name>
            <remote-alias>Share of people with good or very good perceived health by males</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Share of people with good or very good perceived health by females</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Share of people with good or very good perceived health by females]</local-name>
            <parent-name>[perceived health]</parent-name>
            <remote-alias>Share of people with good or very good perceived health by females</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[perceived health]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E42:no:A1:E42:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEO</remote-name>
            <remote-type>130</remote-type>
            <local-name>[GEO (smoking)]</local-name>
            <parent-name>[smoking]</parent-name>
            <remote-alias>GEO</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TIME (smoking)]</local-name>
            <parent-name>[smoking]</parent-name>
            <remote-alias>TIME</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEG_URB</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DEG_URB]</local-name>
            <parent-name>[smoking]</parent-name>
            <remote-alias>DEG_URB</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SEX</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SEX]</local-name>
            <parent-name>[smoking]</parent-name>
            <remote-alias>SEX</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AGE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AGE]</local-name>
            <parent-name>[smoking]</parent-name>
            <remote-alias>AGE</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[UNIT]</local-name>
            <parent-name>[smoking]</parent-name>
            <remote-alias>UNIT</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[smoking]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SMOKING</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SMOKING]</local-name>
            <parent-name>[smoking]</parent-name>
            <remote-alias>SMOKING</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[smoking]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H100:no:A1:H100:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[health care expediture]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D44:no:A1:D44:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEO (Labels)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[GEO (Labels) (health care expediture)]</local-name>
            <parent-name>[health care expediture]</parent-name>
            <remote-alias>GEO (Labels)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year (health care expediture)]</local-name>
            <parent-name>[health care expediture]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>32</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIE_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Health Care Expenditure as Percentage of gross domestic product (GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Health Care Expenditure as Percentage of gross domestic product (GDP)]</local-name>
            <parent-name>[health care expediture]</parent-name>
            <remote-alias>Total Health Care Expenditure as Percentage of gross domestic product (GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Health Care Expenditure as Purchasing power standard (PPS) per inhabitant</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Health Care Expenditure as Purchasing power standard (PPS) per inhabitant]</local-name>
            <parent-name>[health care expediture]</parent-name>
            <remote-alias>Total Health Care Expenditure as Purchasing power standard (PPS) per inhabitant</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Country_Region]' derivation='Attribute' name='[attr:Country_Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
      <drill-paths>
        <drill-path name='Country_Region, Province_State'>
          <field>[Country_Region]</field>
          <field>[Province_State]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.608516' measure-ordering='alphabetic' measure-percentage='0.391484' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country_Region:nk]' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cruise Ships&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cruise Ship&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country_Region:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Romania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[tdy:Date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>#2020-01-30 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-02-19 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-03-10 00:00:00#</bucket>
            </map>
            <map to='#499894'>
              <bucket>#2020-03-30 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-01-22 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-02-11 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-03-02 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-03-22 00:00:00#</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>#2020-04-11 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-01-26 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-02-15 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-03-06 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-03-26 00:00:00#</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>#2020-04-15 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-02-03 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-02-23 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-03-14 00:00:00#</bucket>
            </map>
            <map to='#79706e'>
              <bucket>#2020-04-03 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-01-31 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-02-20 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-03-11 00:00:00#</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>#2020-03-31 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-01-27 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-02-16 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-03-07 00:00:00#</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>#2020-03-27 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-02-09 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-02-29 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-03-20 00:00:00#</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>#2020-04-09 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-01-23 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-02-12 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-03-03 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-03-23 00:00:00#</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>#2020-04-12 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-02-07 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-02-27 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-03-18 00:00:00#</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>#2020-04-07 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-01-28 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-02-17 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-03-08 00:00:00#</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>#2020-03-28 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-02-04 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-02-24 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-03-15 00:00:00#</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>#2020-04-04 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-02-05 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-02-25 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-03-16 00:00:00#</bucket>
            </map>
            <map to='#d37295'>
              <bucket>#2020-04-05 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-02-08 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-02-28 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-03-19 00:00:00#</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>#2020-04-08 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-02-10 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-03-01 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-03-21 00:00:00#</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>#2020-04-10 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-02-01 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-02-21 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-03-12 00:00:00#</bucket>
            </map>
            <map to='#e15759'>
              <bucket>#2020-04-01 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-01-29 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-02-18 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-03-09 00:00:00#</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>#2020-03-29 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-01-24 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-02-13 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-03-04 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-03-24 00:00:00#</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>#2020-04-13 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-02-06 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-02-26 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-03-17 00:00:00#</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>#2020-04-06 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-02-02 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-02-22 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-03-13 00:00:00#</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>#2020-04-02 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-01-25 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-02-14 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-03-05 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-03-25 00:00:00#</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>#2020-04-14 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[dy:Date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>8</bucket>
            </map>
            <map to='#499894'>
              <bucket>28</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>20</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>24</bucket>
            </map>
            <map to='#79706e'>
              <bucket>12</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>9</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>29</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>5</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>25</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>18</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>21</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>16</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>6</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>26</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>13</bucket>
            </map>
            <map to='#d37295'>
              <bucket>14</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>17</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>19</bucket>
            </map>
            <map to='#e15759'>
              <bucket>10</bucket>
            </map>
            <map to='#e15759'>
              <bucket>30</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>7</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>27</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>22</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>15</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>11</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>31</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>3</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>23</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Country_Region:nk]' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cruise Ships&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cruise Ship&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 2' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Country_Region' />
        <param name='target' value='Sheet 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Romania versus Ireland</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' />
          </datasources>
          <datasource-dependencies datasource='Parameters' />
          <datasource-dependencies datasource='federated.012wlj9017zhmc1fmjwkp0koh0sj'>
            <column caption='CEILING([Cases])' datatype='integer' name='[Calculation_261771760406581250]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='CEILING([Cases])' />
            </column>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_261771760406581250]' derivation='Sum' forecast-column-base='[sum:Calculation_261771760406581250:qk]' forecast-column-type='forecast-prediction-interval-lower' name='[fPIL:sum:Calculation_261771760406581250:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_261771760406581250]' derivation='Sum' forecast-column-base='[sum:Calculation_261771760406581250:qk]' forecast-column-type='forecast-prediction-interval-upper' name='[fPIU:sum:Calculation_261771760406581250:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_261771760406581250]' derivation='Sum' forecast-column-base='[sum:Calculation_261771760406581250:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Calculation_261771760406581250:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cases]' derivation='Sum' forecast-column-base='[sum:Cases:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_261771760406581250]' derivation='Sum' name='[sum:Calculation_261771760406581250:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[mn:Date:ok]'>
            <groupfilter function='member' level='[mn:Date:ok]' member='3' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Confirmed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country_Region:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country_Region:nk]' member='&quot;Romania&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[mn:Date:ok]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:sum:Calculation_261771760406581250:qk]' scope='rows' value='Confirmed COVID-19 cases' />
            <format attr='tick-color' field='[Parameters].[Parameter 1]' value='#4e79a7' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[dy:Date:ok]' value='idd' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[qr:Date:ok]' value='false' />
            <format attr='display' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[yr:Date:ok]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_7' value='#00000000' />
            <format attr='line-visibility' id='annotation_7' value='on' />
            <format attr='line-pattern-only' id='annotation_7' value='dashed' />
            <format attr='stroke-color' id='annotation_7' value='#555555' />
            <format attr='fill-color' id='annotation_8' value='#00000000' />
            <format attr='stroke-color' id='annotation_8' value='#555555' />
            <format attr='fill-color' id='annotation_11' value='#00000000' />
            <format attr='stroke-color' id='annotation_11' value='#555555' />
            <format attr='fill-color' id='annotation_13' value='#00000000' />
            <format attr='stroke-color' id='annotation_13' value='#555555' />
            <format attr='body-type' id='annotation_13' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:sum:Calculation_261771760406581250:qk]</rows>
        <cols>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]</cols>
        <annotations>
          <annotation class='point' id='7' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontalignment='0' fontcolor='#787878'>Æ </run>
              <run bold='true' fontalignment='0'>&lt;[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]&gt;, Romania declares state emergency as the no of infections reaches </run>
              <run fontalignment='0' fontcolor='#787878'>Æ </run>
              <run bold='true' fontalignment='0'>&lt;[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:sum:Cases:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-03-16 04:44:32.307#'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='161.59076923076913'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:sum:Cases:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-5' y='-520' />
          </annotation>
          <annotation class='point' id='8' mark-position='1' pullback='0' text-width='296'>
            <formatted-text>
              <run bold='true' fontalignment='0' fontcolor='#000000'>&lt;[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]&gt;</run>
              <run fontalignment='0' fontcolor='#000000'>, Romania declares </run>
              <run bold='true' fontalignment='0' fontcolor='#000000'>state of emergency</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0' fontcolor='#000000'>Cases: 158 (Ro) versus 169 (IE)</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-03-16 01:54:13.846#'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='141.52307692307676'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:sum:Calculation_261771760406581250:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-111' y='-306' />
          </annotation>
          <annotation class='point' id='11' mark-position='1' pullback='0' text-width='260'>
            <formatted-text>
              <run fontalignment='0' underline='true'>Forecast for &lt;[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]&gt;</run>
              <run fontalignment='0'>&#10;Romania</run>
              <run bold='true' fontalignment='0'> versus </run>
              <run fontalignment='0'>Ireland&#10;</run>
              <run bold='true' fontalignment='0'>           871                2230</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:sum:Calculation_261771760406581250:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</field>
                      <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]</field>
                      <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fPIL:sum:Calculation_261771760406581250:qk]</field>
                      <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fPIU:sum:Calculation_261771760406581250:qk]</field>
                      <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:sum:Calculation_261771760406581250:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Romania&quot;</value>
                    <value>#2020-03-31 00:00:00#</value>
                    <value>579</value>
                    <value>982</value>
                    <value>780</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-468' />
          </annotation>
          <annotation class='point' id='13' mark-position='1' pullback='0' text-width='304'>
            <formatted-text>
              <run bold='true' fontalignment='0'>3 days later,</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'>Ireland +265 (increase of 47%)</run>
              <run fontalignment='0'>Æ&#10;</run>
              <run bold='true' fontalignment='0'>Romania + 17 </run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-03-19 00:31:09.230#'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[tdy:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='281.69253294289888'>
                  <node-reference>
                    <axis>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:sum:Calculation_261771760406581250:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='1' y='-408' />
          </annotation>
        </annotations>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='0' model-type='auto-season' range-periods='Week-Trunc' range-size='2' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{19CA9060-E254-41F5-A3A9-A1C7FF891614}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' />
          </datasources>
          <datasource-dependencies datasource='federated.012wlj9017zhmc1fmjwkp0koh0sj'>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Cases]' derivation='Avg' name='[avg:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cases]' derivation='Avg' forecast-column-base='[avg:Cases:qk]' forecast-column-type='forecast-value' name='[fVal:avg:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[mn:Date:ok]'>
            <groupfilter function='member' level='[mn:Date:ok]' member='3' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Confirmed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country_Region:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country_Region:nk]' member='&quot;Romania&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[mn:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[qr:Date:ok]' value='false' />
            <format attr='display' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Forecast Indicator:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]' />
              <color column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[fVal:avg:Cases:qk]</rows>
        <cols>([federated.012wlj9017zhmc1fmjwkp0koh0sj].[yr:Date:ok] / ([federated.012wlj9017zhmc1fmjwkp0koh0sj].[qr:Date:ok] / ([federated.012wlj9017zhmc1fmjwkp0koh0sj].[mn:Date:ok] / [federated.012wlj9017zhmc1fmjwkp0koh0sj].[dy:Date:ok])))</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A6BEA07E-5316-4F4C-9996-77BB5B1E4262}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.012wlj9017zhmc1fmjwkp0koh0sj'>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[GEO]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population_Jan2019]' role='measure' type='quantitative' />
            <column-instance column='[Population_Jan2019]' derivation='Attribute' name='[attr:Population_Jan2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[GEO]' derivation='None' name='[none:GEO:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Confirmed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-28#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GEO:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' />
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;European Union - 28 countries (2013-2020)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GEO:nk]' />
              <groupfilter function='member' level='[none:GEO:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[sum:Cases:qk]</rows>
        <cols>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Population_Jan2019:qk]</cols>
      </table>
      <simple-id uuid='{4AE7DA43-A4E8-483F-9AB4-F4858EAEE766}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.012wlj9017zhmc1fmjwkp0koh0sj'>
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cases]' derivation='Sum' name='[sum:Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-27#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[Longitude (generated)]' field-type='quantitative' max='5520131.3959797379' min='-2198554.003758762' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[Latitude (generated)]' field-type='quantitative' max='8595358.6040991805' min='4080774.3387597254' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[sum:Cases:qk]' />
              <lod column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[Latitude (generated)]</rows>
        <cols>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{576E16FE-6ED3-436D-A9B3-0BE62171E458}' />
    </worksheet>
    <worksheet name='health expediture'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.012wlj9017zhmc1fmjwkp0koh0sj'>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[GEO]' role='dimension' type='nominal' />
            <column datatype='real' name='[Total Health Care Expenditure as Percentage of gross domestic product (GDP)]' role='measure' type='quantitative' />
            <column-instance column='[Cases]' derivation='Attribute' name='[attr:Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Health Care Expenditure as Percentage of gross domestic product (GDP)]' derivation='Attribute' name='[attr:Total Health Care Expenditure as Percentage of gross domestic product (GDP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[GEO]' derivation='None' name='[none:GEO:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Deaths&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-28#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GEO:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' />
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;European Union - 28 countries (2013-2020)&quot;' />
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;Italy&quot;' />
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;Spain&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GEO:nk]' />
              <groupfilter function='member' level='[none:GEO:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Cases:qk]</rows>
        <cols>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Total Health Care Expenditure as Percentage of gross domestic product (GDP):qk]</cols>
      </table>
      <simple-id uuid='{0FCBE584-97CF-4CC7-9BDF-F2A4DC11D7DF}' />
    </worksheet>
    <worksheet name='new cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Romania versus Ireland</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters' />
          <datasource-dependencies datasource='federated.012wlj9017zhmc1fmjwkp0koh0sj'>
            <column caption='CEILING([Difference])' datatype='integer' name='[Calculation_1220194060012363777]' role='measure' type='quantitative' user:unnamed='Sheet 1 (2)'>
              <calculation class='tableau' formula='CEILING([Difference])' />
            </column>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Difference]' role='measure' type='quantitative' />
            <column datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[SMOKING]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1220194060012363777]' derivation='Attribute' name='[attr:Calculation_1220194060012363777:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country_Region]' derivation='Attribute' name='[attr:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province_State]' derivation='None' name='[none:Province_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[SMOKING]' derivation='None' name='[none:SMOKING:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[mn:Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:Date:ok]' member='3' />
              <groupfilter function='member' level='[mn:Date:ok]' member='4' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Confirmed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country_Region:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country_Region:nk]' member='&quot;Romania&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]'>
            <groupfilter function='member' level='[none:SMOKING:nk]' member='&quot;Daily smoker&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[mn:Date:ok]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[Parameters].[Parameter 1]' value='#4e79a7' />
            <format attr='title' class='0' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Calculation_1220194060012363777:qk]' scope='rows' value='New cases' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[dy:Date:ok]' value='idd' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[qr:Date:ok]' value='false' />
            <format attr='display' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[yr:Date:ok]' value='false' />
            <format attr='display' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Province_State:nk]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='fill-above' id='refline4' value='#00000000' />
            <format attr='fill-below' id='refline4' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Bar' />
            <encodings>
              <size column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Country_Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#1b1b1b' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='119' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Calculation_1220194060012363777:qk]</rows>
        <cols>([federated.012wlj9017zhmc1fmjwkp0koh0sj].[mn:Date:ok] / [federated.012wlj9017zhmc1fmjwkp0koh0sj].[dy:Date:ok])</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Country_Region:nk]</column>
          </partitionable-measures>
        </table-calculations>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='0' model-type='auto-season' range-periods='Week-Trunc' range-size='2' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{D227B5EF-866F-4922-9024-D0C804D60147}' />
    </worksheet>
    <worksheet name='perceived health'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.012wlj9017zhmc1fmjwkp0koh0sj'>
            <column caption='SUM([Cases])/SUM([Population_Jan2019]) *1000000' datatype='real' name='[Calculation_1369938746671693826]' role='measure' type='quantitative' user:unnamed='Sheet 3 (2)'>
              <calculation class='tableau' formula='SUM([Cases])/SUM([Population_Jan2019]) *1000000' />
            </column>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[GEO]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population_Jan2019]' role='measure' type='quantitative' />
            <column datatype='real' name='[Share of people with good or very good perceived health by all]' role='measure' type='quantitative' />
            <column-instance column='[Share of people with good or very good perceived health by all]' derivation='Attribute' name='[attr:Share of people with good or very good perceived health by all:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[GEO]' derivation='None' name='[none:GEO:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1369938746671693826]' derivation='User' name='[usr:Calculation_1369938746671693826:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Confirmed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-28#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GEO:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' />
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;European Union - 28 countries (2013-2020)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GEO:nk]' />
              <groupfilter function='member' level='[none:GEO:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[usr:Calculation_1369938746671693826:qk]' scope='rows' value='Total COVID-19 cases per 1 million population' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[usr:Calculation_1369938746671693826:qk]</rows>
        <cols>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Share of people with good or very good perceived health by all:qk]</cols>
      </table>
      <simple-id uuid='{B8474601-935D-4D83-8961-BAC40B345B2C}' />
    </worksheet>
    <worksheet name='smoking'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_data' name='federated.012wlj9017zhmc1fmjwkp0koh0sj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.012wlj9017zhmc1fmjwkp0koh0sj'>
            <column caption='SUM([Cases])/SUM([Population_Jan2019]) *1000000' datatype='real' name='[Calculation_1369938746675138563]' role='measure' type='quantitative' user:unnamed='smoking'>
              <calculation class='tableau' formula='SUM([Cases])/SUM([Population_Jan2019]) *1000000' />
            </column>
            <column datatype='string' name='[Case_Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cases]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[GEO]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population_Jan2019]' role='measure' type='quantitative' />
            <column datatype='string' name='[SMOKING]' role='dimension' type='nominal' />
            <column datatype='real' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Value]' derivation='Attribute' name='[attr:Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Case_Type]' derivation='None' name='[none:Case_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[GEO]' derivation='None' name='[none:GEO:nk]' pivot='key' type='nominal' />
            <column-instance column='[SMOKING]' derivation='None' name='[none:SMOKING:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1369938746675138563]' derivation='User' name='[usr:Calculation_1369938746675138563:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]'>
            <groupfilter function='member' level='[none:Case_Type:nk]' member='&quot;Confirmed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]'>
            <groupfilter function='member' level='[none:Date:ok]' member='#2020-03-28#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GEO:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;European Union - 27 countries (from 2020)&quot;' />
                <groupfilter function='member' level='[none:GEO:nk]' member='&quot;European Union - 28 countries (2013-2020)&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:GEO:nk]' />
              <groupfilter function='member' level='[none:GEO:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]'>
            <groupfilter function='member' level='[none:SMOKING:nk]' member='&quot;Daily smoker&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</column>
            <column>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[usr:Calculation_1369938746675138563:qk]' scope='rows' value='Total COVID-19 cases per 1 million population' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[usr:Calculation_1369938746675138563:qk]</rows>
        <cols>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Value:qk]</cols>
      </table>
      <simple-id uuid='{AC02231C-DC49-4708-9716-60ECC9FDC26E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' name='Sheet 1' show-title='false' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8000' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]' show-title='false' type='color' w='14000' x='14100' y='3250' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='21' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Sheet 1' show-title='false' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]' show-title='false' type='color' w='14000' x='14100' y='3250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F2D90B81-FC1E-42A3-B917-2FFC9C1C75A6}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' name='new cases' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8000' id='8' name='new cases' pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Country_Region:nk]' type='size' w='14000' x='67300' y='16625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='10' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='9' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='new cases' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='8' name='new cases' pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Country_Region:nk]' type='size' w='14000' x='67300' y='16625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C4DA9AA1-ABC5-4F77-988E-CB8F54EA33B3}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{725F9DDF-7299-4F4E-A0FC-1A194B231377}' />
    </window>
    <window class='worksheet' name='new cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Country_Region:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[attr:Country_Region:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[dy:Date:ok]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[mn:Date:ok]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region (copy)_1220194060021960706:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{C50DAED2-BBB5-4582-BC97-730C6A832BC3}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='new cases'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{72DA0A32-EC07-4837-8D08-FADFADA387FE}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FAB9A85F-5EC1-4E51-9109-7269D08108E0}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Country_Region:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Forecast Indicator:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C845358-A04C-4A78-9378-22342FE9D052}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO (Sheet11):nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[sum:Cases:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B9A7A03-842D-4CD6-B75A-3029C748DC31}' />
    </window>
    <window class='worksheet' name='perceived health'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_1369938746671345664:qk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO (Sheet11):nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[sum:Cases:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AA85ED1E-C528-4399-97AE-F02AE1E4E245}' />
    </window>
    <window class='worksheet' name='smoking'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_1369938746671345664:qk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO (Sheet11):nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:UNIT:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[sum:Cases:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F049DC5A-D5B7-4C9E-AD97-DEB40F03E67B}' />
    </window>
    <window class='worksheet' name='health expediture'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Calculation_1369938746671345664:qk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Case_Type:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO (Sheet11):nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:GEO:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:SMOKING:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:UNIT:nk]</field>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[sum:Cases:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59DE1D13-7F4A-4CDB-8122-0FD7AE7D42AB}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.012wlj9017zhmc1fmjwkp0koh0sj].[sum:Cases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.012wlj9017zhmc1fmjwkp0koh0sj].[none:Date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{EA667960-D233-4FBD-95A5-0B52CF98D0C0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      ZDH5/yKLV0vqmxzGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAShklEQVR4nO3daXAb533H8S9O4gZI8RIPURRFXbREibJTy05jO7ZnkrRjTxNPMp2+7sv0
      XWcy09eZyYzfuS/ywtNOX/RS4yaVm9hJ6mNkxyYdW6RIEaB4H+AFHrjvBbB9IRERRdgWRBA8
      9v95I2J3sfgT1A/Psw92n9WpqqoihEbp97sAIfaTBEBomgRAaJoEQGiaBEBo2rYAxELr3Lp1
      i7HJWSo1NLS8slKhPT2KHJubka/cYmJy4pH3NjExuduCxAG3LQATgzep67pKs0vP7z/s36+a
      diHOZwOjX7nF5OSj/6cuZ1txOBlLLfQcaySTHGd1xsfIfBCzEuHUlef47L1f0n3uIqNeLz09
      F5hbWuOVl7/JrWEfic1l2q+8yPDNt+nsPs/Y5Cx/86MfcHtwkJbvvMQXt4bJJDZxtl/h0ulm
      vvjwHZr7XsIa9DKeqCe5OILLU0tWb8MaW2YmmcPhbEQXX+FYcxutJ07z6Ucf8tpr38f3yW+w
      9nyPkff/i5YTp+js7qHeYyvWv+r7hN+MrOG0OehutpJRzawFo7zy3ZcAUFJRhu6MEwn4Ofvs
      d/ns97+g68wTjE/P89c/+At+/fY7NLefIJ7JVeevIPbNjmOAO59/xM//+Tovvfwig2OzvPzC
      N3n+pT9n9IshbO5jXL5yhdq6Wq5c6cOsz5NORImnFCzGAvNLG1gctfT19eFxWor7zKYTROMp
      LBYjC/NLAPQ98wzDAwN8MbbCN7prmJoPYzDVENxcB3Kc7X2W7z7/NG6nk5ySp8ZS81ClOlxO
      J7l8AYvFvOMXa+ns4YevvMzduxOYjAYykTDp++tSsTDJTA6zLo1/NYLNdYy+vj7cNjOhuRFq
      zzzNk1f7cNSU/HwQR8iOAFx86ls8f/U0A4N3ONnkYmwuwKzPy/Gu0yV3MOsbpe18Lx6HpeR6
      gPVZH/a289R7HMVjC32NB112nYLBgtHsodZjofdyL5efOA8YaWw8BkDziS6eunqRTz7+A/Ya
      PYmMgt+/BGQ52d3LlfNtfPzp4I7XbGxsBMDt9tB1roenrz2F6f66iTteTl3sxWV7OFTgbGxj
      dXacZDRIPC0twJGnPiAaXFOTyr2fF/1+NV9Q1YWZCXV2cVVVVVXd2NjY+W8hr/ru3FY3NzfU
      YDRZehu1oE747qjrm5vqRjBafL3wxqoajKZUVVXVZCyk3hocUmOpjBoNbqiZ/L1tIpsBdXBo
      RM3k8mo+m1JvD91WN9YDalJR1fXlBXV49K6aL2ztUVE3NsJqJh5Wo/d/kUJeUUeHh9SlwOYD
      NefU0ZHb6ubmuhqOZ3bUHAwsqWNTc8XH4ujSqaqcCyS0S74HEJomARCaJgEQmiYBEEQ2Vxka
      8ZIraO9wUAa6BaMDg3S/8Cy//d0HnOmoJ5ZS6B/4jO+/+gqz834uXv0GLsvR/K8iLYAAwGxz
      ocunWVlZYW56gc6TnYwOfY7BUGAzFN/v8vaMDIMKFiZ8LIWidJ29iH/8NnqzEyMZ6uobmfWv
      0nPxErVO636XuScqHoBMJkNNzc5vWIU4iCreBcpms5XepaigdDxCIq2gpBOEY8mS2xSUdMnl
      R9HRPLIRX2p1M0QhH0SHipJXCAXA6m4klwhicbpZW1un3gbBbA3nuk/td7l7TgKgOTqggE6v
      R6dkSGQMhOKL2KxmcrkI3efOowbnSMZ1+11oVUgANMbjdmPW5UliQadY2FgP4XDU4nHacNrM
      TI7f5URrMx73fldaHRU/CA4EAthstq/fUIgDoOItgM1mw+l0Vnq3QuwJ+SJMaJoEQGiaBEBo
      mgRAaJoEQGiaBEBomgRAaJoEQGianAohDrRMZIV3P7rD5Su9GJQojvo2Ctn7Z7EWcqwFo6TX
      Jkm6z3Gu1Ul4Y5PWrrMkIkGOHbs3udq//cubGExuXv3hK0xPzNNz4TRjvru0tLglAOJgC8yO
      09X3LG2OIP83nCTvex/d/Y6LkslQazZjroWWE6f4/Y1/4tozT/HB7/6X2vZert0PAGqOjKrj
      49+9g06vY2zEyze+3ceng+PSBRIHW9uFJwn4BlgM5zFl1qlvasdiBFVvpvn4ceqOHaOl/RTL
      s5N0nunhZPcl1lbWefJiR3EfXecvc6a9jobjbVjq2rh8qYv5iUlUnam8k+Fy6QRT835UnZlE
      aJWm9i5S4TUiyTx9T17GAMRiMTkXSOybXCrGuH+dEw1OJmYWMFoc9Pac3bZNPLyBd2yC0xev
      ln826PT4HQrmOkyFOMF4Do/Dih2wn+rEWiiQTCYlAKLicrkc6XQah8NR0f2W1QXKJKIomDEa
      8iiKis1mxagvEEgr2HU6DAZDRYsTYouiKMRiseLjz/vfxx8KMj07y+bmOlMzc7z92/eIhoMM
      3/ESi4YZHR0hlVEYH/Py7vvvltxvWQfBNXYX5866diw/UeYvI0QlLM5OkVWtDHz2CXrVQI2n
      ntnZGXzeUSYXZniq7xK/+p9fcK73GrYS95AAGQYVh5TTVUvebKO+uQNdYh29yYbOYCJbyGK3
      O7C76mhoaODkyZOszE3gdJfuOlX8ijA5CBZ7QVVV8vk8RmNlP7OlBRAHXiaToVAoAPeOBSwW
      CzpdZS7alwCIA29tbY1k8k9zGHV2dnJncIBMXoer/jhPnC19+64H5ZU0kWSWOvf2Y1gJgDiU
      QsFN7J4G4pEA/3H9Fja7jVgiTDwSocbi4qneC/zq7Xfo+7M+anR5LDYnmF14/9jP8c5uXvne
      dwA5GU4cVnoDLqcFDEbU+7debOvo5FTnSU61tzDnn6ejrZloKs+3nnuWbCpFKLCIpbYJRUkU
      dyMHweLASyQSKIpSfOxyudDrK/PZLV0gceDZ7fY927d0gYSmSQCEpkkAhKZJAISmSQCEpkkA
      hKZJAISmSQCEpkkAhKaVFQC1kGNmaopUJkdofZVoIk06EWV1PbRX9Qmxp8o6FaKQy3O8tZnp
      6XGMegtshgEwAdmGWkpfdCbEwVVWAAzmGgIzC1itRshbisstQF5Vyd+/aEGIw6LsWSHSSgG7
      sxGTIYXF4cbtsJAymLDKrBDiEJLToYWmySiQ0DQJgNA0CYDQNAmA0DQJgNA0CYDQNAmA0DQJ
      gNA0CYDQNAmA0DQJgNA0CYDQNAmA2BPX37rB62+8ud9lfC0JgNgTVruduoam/S7ja0kAhKZJ
      AISmSQCEppV1TXAunWBqzo/F7iYeXMXd0IKaiRFO5rnYc5bK3LZMiOopqwUwWux4HFZMZjNG
      o554PEGuoKfJYiJx/zaWQhwmZQUgse7n7sIaRoOKwVBDOpUil0mwEIrKRfHiUCqrC2RvaOf5
      hnYAmurr96QgIapJDoKFpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkA
      hKaVdS6QEAdVf38//37jA/7xZ/9QXOb1ehkYmd6x7dOXuujp6QEkAOIIae3o2vY4Go3iaene
      sV00Gi7+XLILFAgE+OiDD1AqevMkIQ6ekgH4+LfXSaaybKSqXY4Q1VWyC/TE5Ws4Gk/RYK12
      OUJUV8kAzHj70a1E0btfpMVW7ZKEqJ6SXaDjp/uYmJgo0QKoLM7PkswohNZXiSbSpBNRVtdD
      e1+pEI8pHA4zfMdbcl3JFmB6bJCzXWfYSMHxB1qAXDqJp6GZuelx9HorbN47mjYB2YZazBUv
      XYjdi0QihBK5kutKtgA9V55Bb9LjeigeBqOBuZkZTp89hclowWQ0YTKasBhN5GVWCHEIlQzA
      ytQg2YKZVGH78lQsis5oJBTKYjKksDjcuB0WUgaTzAohDqWSXaCuqy+zODOH46E+ja22kZ7a
      xnsP6j3F5TI/hDisSgbAO3wLNQ8pBSw11S5JiOopGYDv/OVfkc+DyVTtcoSorpLHAAMff8Cv
      b/w34XS1yxGiukoGYHVpAWrc2KQFEEdcyS5Q8/F2knk92TyYZWBHHGElW4DQyiSe+hYycjao
      OOJKBsDqcDLqHccin/7iiNsRgNHBfpL6OpToEillP0oSonp2HAM4nG7c7hznL/2AejkdWhxx
      O1qAaCREJBJhbOQWsex+lCRE9exoAS49+SyX9qMSIfaBTIsiNE0CIDRNAiA0TQIgNE0CIDRN
      AiA0rawAFJQ0A58PAjA6PIR/OcDC7BQj3nHktCFxGJUVAL3JQp3HAYDRqCceT5Ar6GmymEjI
      RfHiECprclwlHcfv9+NwuTEYaoinUhhMBRaSefrkonhxCJUVAJPFwYvffvHeg6amvahHiKqS
      6dHFoXZ7eISF5TUmxu8yv5bh7XffI5VI8KPXXn2k58sokDjUFpbXUGyt5GrqKRhtKLZWZtcf
      fVpzCYDQNAmA0DQJgNA0CYDQNAmA0DQJgKg6v9+P11v6hhXVJgEQVTc0Ol7y/r37QQIgNE0C
      IA6N/v5+fvyTn1Z0nxIAcag8fDf43ZIACE2Tk+GEJkUiEXw+n7QAQpt8Ph/LWY8EQGibBEBo
      WtkBiEajAITWV4km0qQTUVbXQxUvTIhqKHtWiGHvGJAlsJlg2T/HnH+ZxGYAmUhaVMJ7H97k
      X6//smqvV9YokN5koam+FshjMlqKyy1AXlXJFwpf+lwhHkUyrZApVG9wsuxZIZKJJMuBBCZD
      CoPVQw0Zwqk8Vp0OZFYIcciUPSvE5cuX7z+qLy6vL725EAeejAIJTZMACE2TAAhNkwAITZMA
      CE2TAAhNkwAITZPrAUTZ3vvwJsm0sm2ZzWLipRee26eKHp8EQJRtfjWCp6V7+7LlyX2qZnek
      CyQ0TQIgHtvU9AzLKyv7XcauSBdIPLZQLE02V6Dl+N6+jt/vZ3FxEa/XSyCQoL+/H4Br167t
      et/SAogDb2h0nOWshw3FQbJgZjnr4ebt+YrsWwIgNE26QOJA2OrmTE1NEU3lK9rN+SrSAogD
      YaubE8rZiOYsFe3mfBUJgNC0xw7A9MQY/uUAG6tLTM0uVLImcYC8/sabXH/rxn6XsWceOwDR
      aARVVYnE01jzCilVJZ/PV7I2cQDUNTRhtdv3u4w985gByNF15iLR4AZKTiGdUzDodBjkonhx
      yDxmAIyk4pu0nTzFyfYW7MeaMFe2LvElfvyTnxZHSMTuPfYwaFPLieLPzUe3hTxwKj0/vtbJ
      KJDQNPki7JD48U9+SmtHF8O+aZbmp7l5e57OBis/eu3V4jbvfXiT+rpaLvdeKmvf19+6wcLy
      Gn//d39b6bIPPGkBDonWji66L/Tiqq0r/vzw6Mz8aoSF5bWy922126lraKpUqYeKtABHwPW3
      bmC127k7Mc2i5d5I3ImWxrJbAi2SFuAImF1PodhayZtc5MweFFvrY7UEe83r9dLf38/U1BR+
      v5/+/v59v2G2BEBUzcDI9I7zffb7htnSBdKwrYvbh0Z8xNN53n73vUN7cfvjkgBo2NbF7Tnz
      Mvm8gmJrLV7cvjXqNDYxTY0RfHMbO0adjgIJgChpa6RpLZTAbjXRfaEXU3Jpv8uqOAlAFfn9
      foZGx3csv/LEWdrb2/ehIiEBqKLFxUUUW2vJ5RKA/SEBEBX1+htvkjc5mZmZJpOD9XASgxI7
      sN8yyzDoHolEIpo8a7OuoYnuC700tbRzrKGZ7gu9B/pbZs0E4PpbN3j9jTer9no+n68q17SK
      3dl1F2hhdopwMs/FnrPoKlHRHqnW+S79/f3cvD3P0vw0Gwn42c//E4DnLnds2+7mJ3/k3OkO
      mpr2tiav11u8ufkWl8tFT0/Pnr7uYbHrAOQKeposehKAowIFHRRb03Q87FGm6ei+0AtAdiVU
      /BnC27ZRDTWk0+ld1/l1Bkamd0xk6xuZlADct/sAZBIsJPP0VaKaR/C4p/yWa2h0fMeIzaRv
      eE/nqdk6qe1BclLb3tp1AM5cuFiJOrbxer24XK5tQ4NbTfkfPh/FZTWQSiaKTflXzVe/21GJ
      dDpNIBCgo6Njxzq/38+nnw1W7NvR2fUU3Q1nti1bWF7icu+XPEHsmk5VVbUSO1JVlUKhwMbG
      BjabrbhMp/vTkUGhUECv13/tuuXABmajgfpjtcV1gfUgxhorkUgEg16Pw+kkl0nR1FBXXKeq
      sLXLh9fFYjEKBRW321Vct/V6D9dTKBQIhiKoBjPpdIZURqHW7SCVSNB2vL74vEgkQjiepqO1
      qfi8WCxGVjWSSiRIZRTq6jwAmFDQ6XRk1XufOaFIHGuNCYulBhMKHo+HhaU1rHb7tt9Dl89S
      V+tmcWUDq91OMBjGWmPCarfvWPfge7O17nHfm0fZZzSWwGDQY7dZH2mfX7Vu6/2Ox2LkCwXc
      bnfx/d5a9+B7+ijrtv4WD/4NH/5bVCwAW2KxGE6ns+S6B/+Ty7pHW3fQ6jlq6/4f7pY1zai3
      wwcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAX80lEQVR4nO3daZAc533f8W/39Bx7ze5iDyz2wH2JBIiLIAhRElikSVFFWqZIk4ktU4oS
      2UkUWXLkymGXU05VXqWSkuSEYUqKS3LJtGSRkkiKMq2wdNgEQ+IkKCwAAuAu9pjdnZ2dY+c+
      u/vJiwUgYLkDYGdmL/T/U4WqndnuZ57FPL95unuepx9NKaUQwqH0pa6AEEtJAiAcTQIgAMil
      pvjZ67/g9PlB1NXnpknnzSWt10IzlroCYnkopCMY/h6C50/T1uJl9NIlSvEgYe8mtjSbhBN5
      7jt0CJ+hLXVVa0p6AHENhakgMDjAdKGIr7mTTZs3c/z4cdxeA9Oyl7qCNSc9gACgzt+Fnj/L
      tn0H8LsKeOI5Nvf1cGEwwEMPP8RUqojHdft9XmoLdRm0UCjg9XoXomghambBIl0oFBaqaLEA
      zFKBqakItoLpWISiaZGMx0hlcpjFPLHp5FJXcUHIIZAAIJlIUMrFuXA2jN7YSCkYpm1VC1Mj
      E3jd4DFcKMNLW9Pt1avffgd1oiI+j0E8C00+D929PfjcBsVsko413bgMH12dbeRz+aWuZs1J
      AAQAQ0NDaFg0tTUz0N+PrTQmphLkcll8bsXFkUlWtTYtdTVrbsFOgpPJJH6/fyGKFqJilmXh
      crmuPpYeQDhKJpO57rEEYBkp5dIcPfkuSln84y8PYymFmuPfxNg49uWfRXXkKtByYttQyjMV
      HMdobGE6FOD48XfY9qGdhFJ5Wr0K292Aq5AkNBmkb9udtDfVLXWtVzTpAZaZru5Ozg9O0t7o
      JhyLs6FvNclMkU1bt2DoOqta/Hjr/Wxevxbbtpa6uiuenAQvI8q2sWwb0zTRdR2URS5fxOer
      w3C70WyTeDpLU0M9Ll1HaRouXT7D5mN2u1ywACQSCTTt9ho5KFa+TCZDQ0PD1ccLdg6gaZr0
      AGJZurZdSv8pHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBxNAiAcTQIgHK3qoRCh4Bi5
      os3qznYMTz2lQpb6+vpa1E2IBVd1AFpa20hcGiAdK5KwGnHpOhskAGKFqDoAHkNHuRupNyxO
      XBjiY/ftx7Zt7MvDeoVYTizLuq5dVj0cenpqAqOpA3chQtbdTiw0waaN60jJfACxDC3afACZ
      ECOWo9ntUq4CCUeTAAhHkwAIR5MACEeTAAhHkwAIR5MACEeTAAhHkwAIR5MACEeTAAhHkwAI
      R5MACEeTAAhHkwAIR5MACEerOgDFXJqBwSGK+Qx5U5FIJGpRLyEWRdUBeO/cWdB0CokQwyNj
      JPN2LeolxKKoelK8hZvWOpiMJAhEi+zft1smxYtla/ak+KoD0NPVRjCWoa9rDZ2bOkiEgzT3
      9aLrOoYhq7CK5cXlcl3XLmVSvHAUmRQvxDUkAMLRJADC0SQAwtEkAMLRJADC0SQAwtEkAMLR
      JADC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0SQAwtGqDkBoYpT3Llwkm4qTLSkikUgt6iXE
      oqh6zuLkZJDG1jXY2SgXh0P09PaglEIphW3LBHmxvMxul1UHYOfu/UTHLzE5nSeXt9A0/WoA
      Fmi2pRAVm90uqw5AMDBMImuxvrebLm8r6VgIraUeXddxuVzVFi9ETc1ulzIpXjiKTIoX4hoS
      AOFoEgDhaBIA4WgSAOFoEgDhaBIA4WgSAOFoEgDhaBIA4WgSAOFoEgDhaBIA4WgSAOFoEgDh
      aGUnxPT3/4rg8EVWb9nPru3rF7FKQiyesj1AMjxGx/oP4da0GxaglM2ZM+copqOkCopgMFjz
      SgqxUMr2ABqKomniNW682PVkYJhU0aSUjXPq0ig7dtxxdaFsy7JqXmEhqjG7XZafE6zp9J94
      m3sO/eYNC4xEYyQjMRItPfj9TeRyOVobPGiahq7LKYZYXma3y7IB6N28A1134W9quGGBO/fc
      TW88TpNXp8VoIpeMgaahXf4nxHIyu12W/Yg+e/IwOb2R0HjgpoW2trRg1Pmpd2u0tbUhzV6s
      FGUD0NOzlujECI1tqxezPkIsqrIByJYsmlsaSMWii1kfIRbVnOcA07EYu/cdJDEVwPRJDyBu
      T5at5u4BLpw/g254WNXexujw8CJXS4iFp5Qili3N3QPsvGM7P/3Jj8Hw8dDDDy123YRYcAVT
      UTDVjW+NaJcKZEuKxnrfvF9Abo0olqMr7TJXsohmzPInwZZlUsgmCU+nkHs8i9tROF3mEAjg
      9Z/8kJLmZmx0ik/93mdZ01K3mHUTYkEl8hbD0/nyPUBTkx+3YXDnjjtQSha6ELcXlwa7uhvK
      9wB1Ph8Fl589++/GX+9dzLoJseAavS4KZpnLoABut0EyMsHIhKz5JVauXMkikTMpWXMfxZTt
      Abr7NhBPF6n3uResckIstELJJl208Rga7msWLNI1jY5G99wBeOPvX2QgYtPV1caGno7FqqsQ
      C8Ke40q/xzUzKnTOQ6CDDzzGfXu3k08lGJZDILGCZUo2b4+kSBeun5x1ZUj0nD2A21vHtjt3
      se3OXQtfQyEWkNfQ6Wn24DPmPt2VKVvitmZosL7Vh+Gae5ZKDZZJHWJyKsLq9ha0pjUkp6Ns
      27Su2mKFqAld1zB0Da3MNK2qA+D3+xkKBDF0xdGTv+LhBz58dVK8ad54Qr0QC63egHpDB2xM
      c2ZC/LXtsuoATMcTNNZ5yWSL7N61g4HBYe7YugFd1zGMqosXoqZcLtd17bLqhbJt20YpdXmm
      vQYo0DRSMhpULCKlFL88NYzH7eIjO9eW3a7mC2VfWXp+Zrb95Vn31RYqxDy9czHIP5wa5u5t
      3be8j61suQokVr6hYJzv/vwMf/T0vfg8t3bYrZQimg9JAMTKFo5neO7l43z5yQOsarr1IfsF
      K0eqlJQAiJUrVyjx3//2bT7z8btYu7p5Xvval4f4SwDEilQyLb7+4lEeObCJHRs6KyojUZyu
      /jKoEIstVyjxzVdPsrG7lft3r6/oFpwZM82J8FsSALGyTMbSPPujYxy8s49HD26puJyMmWZf
      x4clAGJlUErxzsUgf/Ozfj7/6F4+tK69qvI6fV3YypIAiOXPtGxeOnye94bD/NkzH2OV/9av
      9li2ia1sXLqBrl1/yquhy0mwWN6KJYuvvXCETK7Inz7z0Xk1foDpYpRAZoicmb3ueV13saa+
      V3oAsXzZSvHcy8e5Y307jx7cWtOyfa6ZIEkPIJYlWym+97MztDb5+MS9lZ/s5s0cx6YOk7ey
      c/5eAiCWHaUUPz85xEQkyacfugu9ypWGbGYGbM5FAiCWnZMXg7x5epQvPnEAw1VdE/UZddzb
      eYg6Y+6lviQAYlkZHI/xwi/P8uXfPkCdt/pTVJfmwtDcZXsROQkWy0Y4nuEbPz7Jv3ninnlf
      7QEwbRPLtvAav76TYYunjRZPW9l9qu4BbNuiVDJRykapmQkyQsxXrlDiay8e4TMf38W6eQ5s
      g5l291dHv8m74yeve167yYqlVfcAoYkxwpEILU310NhFNp1m+6a+aosVDmJaNv/jh8d4cO9G
      dmyc/8A2pRQ/PvND3C4396w9OK99qw5Ac7OfWDJPc4OLN/rP8fD9B2VSvLhlSsF3Xj/NmrYG
      Prarr6I288bgLxiZHuZfHvzD61aBn0vNJ8WfO3OGupZOLKWzf99uLg0Ns33LRpkUL25KKcXr
      xwdJZYt88Yl7KrricyZ4mrdGDvOV+/8En+fmKxnNnhRfdQu9++BHr3vc1bqx2iKFAyilOD0Y
      4o3To/ynZz5WUeMfi4/y/VPP80eH/j31nvqK6iGXQcWSCIST/PXrp/njpw/iq+ByZzw3zbOH
      v8q/uu9LtDVUPjJUAiAW3Vg4yV+8eJQvPL6/osudJavEX779HJ/e9zm6/T1V1UUO0sWiGo8k
      +doLR/j8Y3vZ2N067/2VUvzduZdZt2oDO7urv3mz9ABi0UxG0/y3773F7z9W+YSWgchFzgb7
      +a0dT9akThIAsSjGwkn+63ff5AuP72d7hY0/V8zyneN/yecO/AEeozbr1skhkFhwo6EEX3/x
      CP/68f1s7Ss/LOFGlFL87anneWDLw3Q399asbhIAsWCUUoyFk3ztxSN84fG72dJbWeMHOBk4
      RrqQ4tDmB2tYQzkEEgvoQiDK//zRMb785IGqGn8sG+WV/h/wzP5//oF5vdWSHkAsiHffn+R7
      Pz/DV546SFdbY8XlpAopvn30G3xq19O01M3/qtHNSABETSmleLN/lNeODPAffve+iq7zw8yt
      C0+NneCV/h/w4NaPs6fn7hrXdIYEQNSMUoqfHhvknYtB/vT3PkJTfWVXaiKZMH9z4tv4jDq+
      dOjf0d6wcEv1SgBETZiWzfd/cYZgNM0f/5ODt3yb8mvZyuan7/2EoyNv8fjO32ZP78J86l9L
      AiCqFk/nee7l46xb3cy/fepeXBUMbLNsk28d/QYNnkb+5Df+HJ+7skOn+ZIAiIoppbg0Mc03
      Xz3J4x/dzr139FZ0o1rTNnn+xLdZVd/OE3c9XVEZlZIAiIrYSvHm6VFefesif/jEPfO+P/8V
      lm3x/PFvUe9p4FN3PbWojR8kAKICpmXz3Z/1MxlL858/d4gGn6eicmxl8/yJb+HSXTy565/W
      /Br/raj6FZWyyOXz2GYR04ZCoVCLeollKl80+fqLR3DpOl95+mDFjd+yLb538jtYyuZ39/0z
      XLqrxjW9NVX3AOHJIOPhONu66pksNmLbNpvXdtWibmKZiSVzfPWFt7l/z3oe2Luhoju2KaWI
      ZaO8du4VSlaJz97z+0vW+KEGAehc00sskUIpm3Pn3+fBQzIp/nY0PBnnf79ykk8/tJO7NnZi
      WxbzvQFOOB3iJ+deJpia4MEtH2d/370oW2Hai9dOZk+Kr3qh7InAEANDAe7Y3Ifm7yE6Oc6W
      zRtkoezbyMkLE3z/l2f50hMH6O2c/3saTI7z6pmXGE8EeOzOx9nXd2BJjvfhgwtlVx2AW30h
      sbLYSvF+IMprRwcoFE3+4Df3zWtYg21bvBc6y+sXXqNklfiNrY+wq2fvkh7uwAfbpVwFEtdR
      SjEeSfHS4fNk8yV+6yPb2Nrbhq7f/HhfKUXBKnBs5C0OD/4Dq+pX8ckdT7KhbdOSfeLfjARA
      ADON99xIhP97bIDpVJ5P3reV/dtvfcK5UoqjI2/x6pkfsbtnb9V3a1gsEgCHi6fzvHl6lDd+
      NUJPh59PHNjM9rXt8/pCyrItXun/AUOxQf7s4f+Cz1236F9oVUrOARzIthWDEzFeOzLA1HSG
      D+/o5b6da2lpvPmd1WYrmgX+6tj/weeu43f2PoPbVdn3AotFzgEczLYVFwIRXjp8Ho/huvpp
      X8ngNYBkPsH/OvxV9vTezcPbH122x/k3IgFwAFspzlya4qXD52nwufmdB3ewvqulqsOUsfgo
      33zrWR7f+RR7eu9eMYc8s0kAbnO5Qom/+MFR3IaLzz4yc+/9ahprKp/k7997lfNT5/j8wS+w
      tnV97Sq7BCQAt7F8weSrLxxh79Y1PHLPpqoaftEq8v8u/SO/uPg6D2x9mE/d9TRul7uGtV0a
      EoDbVMm0eO6V4+ze3MUnDmyuqAylFKZd4vTEu/z4zI+4q3s3//GhP6fBU/kk9+VGAnAbKpkW
      z750nE3drTx6cH5r7NrKZioV4txkP++MnSCVT7CxfTNf/OhX6Gic/+oty50E4DZjWjbPvnSc
      Nasa+eR92266fdEsEEpNMhB5n/dCZ5hMBvH7/GxffSef2f8vaGtoX/LhCwtJAnCbsJUilS3w
      /Ov9tPnrePqBO4GZL6ks26JoFUjmk4TTU4TTIaKZCOOJANO5GB2Nq9nW+SEe2f4Ya5q7qXNX
      ttjESiRfhK1QSilMy+ZSMM6pi0HeHQgyMj2Exx9k/44m0sUU2WIGS1m4dTdulxu/r4X2hg46
      Gjtpa2inu7mHjsbVK/L6faXki7AVSilFNJFjaDLOwFiU98ejvD85QpYxvE0RNq/18+SBbezs
      fopGTxONPj91Rh0eY3l/M7vUJADLjGlZZHIlwoksE5EUY+Eko1MJRsKTRLOTuHwJGvxpmvxF
      9t7TxZ6+A9zVvYeWulZHfZLXihwCLTDLtskXTWLJHIGpJBORFMFoimAsQa5ooms6GhqapmNd
      nhlV5/XQUA+rml20t7rpaK2jtcnDqkY/DZ5GfG4fPsOHJg1+3mp+CJTPJIkk86xpa8J01VHK
      pmlsun2uE8/FVjb5YomCmcdWNqZtYts2ljLJF2zGp7KMhOKMTeWIxgu4XDqtTR5Wt/nobmvi
      w70drG7dQL3Pg6EbV/9pmobh0lfssIKVqOoAXBoO0NzgZmIsRk5vwuv1fSAAwVicRCZ3g1Jm
      fZIpDZSOfflEr5xCySRXMMkXTXKFErmCScm0uJUuTSlFyby+bNOyMS2bQskiXyyRzRfJlfLk
      SwWKZglDd2Poblyagc9z5dj6+ldrqPOwbnUz67pWc/+uVnram65OHpeGvfxUHQC3x0NTUwOR
      qQhDoQAHD+yb+TS0LDKZDC6XizdPjxMIJebcX9f1D4xGNHR9ZgaSZqNpv25gbv2aEzpN4TFc
      aLoJuonbDe46C7dmwax2pgFu18ynra7pMz+7XOj67KjY6Dq4DQ2P4cJtgMflwev24NHdGLoL
      t8uN2zCw7ZnwaJqGrutXVyif/biQz8/5e9u2UUrV/DHMLAZdi8dX3p/lWLdrHyulrtb3Zo8L
      hQKZTOZq3ao+BxgfuUQslWdDzypMXzvTUxOsX7dWJsWLZUkmxQtHm90u5TKCcDQJgHA0CYBw
      NAmAcDQJgHC0BRsLpJQimUxe/fnKl0C2baPr+pzPXbvtXM/Nd39N09A0rez+QNnXWur9r/39
      Uuw/+728Uo5SquL3r9r9a9F+MpnMdc8tWAA0TZvzMui1FZvvc/Pd/0oDlP3nv/9crm3AlZRZ
      7f7z2fZGf9PiXgZVilQq9esXnKNSuq6DUkxHp5gMx1BltruyrVI246PDTEWmb1impmkkYmGG
      hoZIpHM3fn0gk5wmEktct/9c2175e6xSnmy+eIMyFalUGmWbjI2OkMmV39Ys5sgWShSyKYaG
      hsiX7LKvn06nsG2LsdERhoZGUTf4m1KpNChFKDhOvmiWff10Ikbo8v/nte/XtTRNA2URCAQo
      mRaTE2PEU5myZebSCSZCYcxSnuGhIZKZfJltNaJTQeKpLKGJAENDwxStub+e0pTNWCBA0bSI
      hSdJZcuVeeOmnUmlsFiEACSnI5w9P3BL27oMD9PBEbKlG383ZxZSjIemqau/+d2KG5qaafQo
      kpniTbZUDI+OEZsYIl0s//qlXJoT7/YDMD50kdFQrOy205Epzg9ewiqVaGxuZuD98v8PY4Pn
      CISTDA8PY3h8eNxzvzVWIcupX53GtDU6OleTTiVmj/y4KhELc+79ASLBUUqahwsXLpZ9/Vyh
      RGQswHQ8Sv975bdLp1I0NRgMXBqnrr6RoYHBsmOvMrkCmUiIkdFhsqaOzzv3XSSsUglb9zA6
      dInWtg6sQgazzBCwTDpFQ4OX82f7CcVLXLp4cd7rFFhmgTPHTpFjEQLgX9VBS+Mt3FZb07BL
      eTJFhX6T4WwudwObNvQyOHDzYBmGm1iqSO9NF3HT8Lp1EskEuVL5/1J3XSNdHa0AdPf24rrB
      ALdVHV00+twY3jpioXEMb/lbD/b09uHSYN36DbhVmuHR6Jzbubz1dK+euemsrgrUN7eVfRNb
      2jrx13tpam4hHpkik82XfX2rkKWhvZPWljZa/eWnRPo8BmOTcTZu6CGTjILLmD0e8JpCi2gN
      zfT1rqO9yWDwUmDOzXTDIBWboqt3LW5Dx9LraPTOPQ/Z6/UwEYywaetW7HycVCo77wC4DC89
      3TMT/Bc8ALFwkEg0QmR67m71CqUUsdg0bo+77CfaFVYxx2RoivrGmw+1MAsZmlo7b1omQJ3P
      R31rN2315SeB51JxopEogYkQI8MBwqEJitbc205NBIhGooQmJ8mZGoZRrlyb4ZEA4clxpqen
      CccytLTOPaS8kE0yNRVmLBgiGkvS27umbF0joXGikSjJXAlDh751a8tsaTI2Pkk+kyEaCRGN
      RJmKzT14cXxsDA1FIjFNIpXH7S53byCbsbEJSrkcyWSCcCSGv2XuD6FiJk44niWdSpGIRVnT
      11f2b5ocD2ApyGSLeD0u1qztm/eJrJnPMBGNMD46zv8H2M6sJ0iPMxYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      Af7AKRXUSs0UAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='health expediture' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='new cases' width='192'>
      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
      zAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='perceived health' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='smoking' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
